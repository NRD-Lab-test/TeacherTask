{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/RedGreen.svelte","../../src/Game.svelte","../../src/MobileGame.svelte","../../src/Instructions/NavigationButtons.svelte","../../src/Instructions/SingleChoice.svelte","../../src/Instructions/DoubleChoice.svelte","../../src/Instructions/FullScreen.svelte","../../src/Instructions/PracticeGame.svelte","../../src/Instructions/NavigationArrows.svelte","../../src/Instructions/ProgressBar.svelte","../../src/Instructions/MonthProgress.svelte","../../src/Instructions/Instructions.svelte","../../src/Instructions/MobileNavigationButtons.svelte","../../src/Instructions/MobileDoubleChoice.svelte","../../src/Instructions/MobilePracticeGame.svelte","../../src/Instructions/MobileInstructions.svelte","../../src/Password.svelte","../../src/BlockEnd.svelte","../../src/Control.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.34.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n    export let numberGreen=0\n    export let clearBoard=false\n    if (!numberRed){\n        numberRed=20-numberGreen\n    }\n    $: numberRed=(!clearBoard)?(20-numberGreen):0\n    $: rangeGreen=[...Array(numberGreen).keys()]\n    $: rangeRed=[...Array(numberRed).keys()]\n    let stackSize=5\n    let ballSize=50\n   \n</script>\n<style>\n.redDot{\n    border-radius: 50%;\n    background-color: red;\n    width:min(4vh,4vw);\n    height:min(4vh,4vw);\n    position: absolute;\n}\n.greenDot{\n    border-radius: 50%;\n    background-color: green;\n    width:min(4vh,4vw);\n    height:min(4vh,4vw);\n    position: absolute;\n}\n.dotContainer{\n    width: min(38vw,38vh); \n    position: absolute; \n}\n.ballContainer{\n    top:min(8vh,8vw);\n    width:min(18vh,18vw);\n    height:min(25vh,25vw);\n    left:max(-1vh,-1vw);\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    border: solid black min(.2vh,.2vw);\n    position:absolute;\n}\n</style>\n    <div>\n    <div class = \"dotContainer\" style=\"left:min(2vw,2vh);\">\n        <h style=\"color: black; position:absolute; width: min(20vh,20vw); left: max(-2vw,-2vh); font-size: min(2vh,2vw); text-align:center; top:min(2vh,2vw)\">Green Lights</h>\n        <div class = \"ballContainer\"></div>\n        {#each rangeGreen as i}\n            <div class= \"greenDot\" style=\"left:calc({2*Math.floor(i/stackSize)} * min(2vh,2vw));); top: calc({2*(stackSize-i%stackSize)} * min(2vh,2vw) + min(7vh,7vw)); position:absolute;\"></div>\n        {/each}\n        </div>\n    </div>\n    <div>\n    <div class=\"dotContainer\" style=\"left:min(21.5vw,21.5vh)\">\n        <h style=\"color: black; position:absolute; width: min(20vh,20vw); left: max(-2vw,-2vh); font-size: min(2vh,2vw); text-align:center; top:min(2vh,2vw)\">Red Lights</h>\n        <div class=\"ballContainer\"></div>\n        {#each rangeRed as j}\n            <div class= \"redDot\" style=\"left:calc({2*Math.floor(j/stackSize)} * min(2vh,2vw)); top: calc({2*(stackSize-j%stackSize)} * min(2vh,2vw) + min(7vh,7vw)); position:absolute;\"></div>\n        {/each}\n    </div>\n</div>\n","<svelte:window on:keydown={handleKeydown}/>\n<script>\n    import RedGreen from \"./RedGreen.svelte\"\n    export let counter=0\n    //export let top=\"50px\"\n    //export let left =\"200px\"\n    export const viewNumber=2\n    export let gameString=\"\"\n    let trialSd = 3\n    export let numTrials =30\n    let trial = 1\n    let range=[...Array(viewNumber).keys()]\n    let trialStartTime=Date.now()\n    let viewExplore=false\n    let exploitMu=random_int()\n    let exploreMu=random_int()\n    let exploreSelect =false\n    let exploitSelect =false\n    let replaceExploit={truth:false}\n    let keyView=true\n    let clearBoard=false\n    let currentUnderstanding=exploitMu\n    let lastGreenBar=0\n    let lastRedBar=0\n    let greenBar = 0\n    let redBar=0\n    let trialHandle = false\n    export let toNext\n    export let writeKey\n    export let id\n    export let bothInvisible=true\n    export let block\n    export let totalBlocks\n    console.log(gameString)\n    //$: oldExploit =replaceExploit\n    function migrateLeftExplore(node,{delay=0,duration=500}){\n        if (bothInvisible){\n            return {\n                 delay:0,\n                duration:0}\n        }\n        console.log(`migrateLeftExplore:${true}`)\n            return {\n                delay,\n                duration,\n                css: (t,u)=> `transform: translateX(calc(${100*u}vw)) `\n            }\n}\nfunction migrateLeftExploit(node,{replaceExploit,delay=0,duration=500}){\n    if (bothInvisible){\n            return {\n                 delay:0,\n                duration:0}\n        }\n    console.log(`migrateLeftExploit:${replaceExploit}`)\n        if (replaceExploit.truth){\n            return {\n                delay,\n                duration,\n                css: (t,u)=> `transform: translateX(min(${50*u}vw,${50*u}vh)) `\n            }\n        }\n        else{\n            return {}\n        }\n}\n    function migrateOut(node,{replaceExploit,delay=0,duration=500}){\n        if (bothInvisible){\n            return {\n                 delay:0,\n                duration:0}\n        }\n        console.log(`migrateOut:${replaceExploit}`)\n        if (replaceExploit.truth){\n            return {\n                delay,\n                duration,\n                css: (t,u)=> `transform: translateX(calc(${-100*u}vw)) `\n        }\n        }\n        else{\n            return {}\n        }\n       }\n    function InvisibleOrDown(node,{replaceExploit,delay=0,duration=500}){\n        if (bothInvisible){\n            return {\n                 delay:0,\n                duration:0}\n        }\n        console.log(`invisibleOrDown:${replaceExploit}`)\n        if (! replaceExploit.truth){\n            return {\n            delay,\n            duration,\n            css: (t,u)=> `transform: translateY(calc(${100*u}vh)) `\n        }}\n        else{\n            return {\n            css: ()=> `visibility: hidden;display: none;`\n        }\n        }\n    }\n    async function timer(time){\n        return await new Promise(r => setTimeout(r, time));\n    }\n    async function Send_Data_To_Exius(params,templateKey,writeKey){\n    // [{endpoint:Horizon_CSV,data:data,fname:fname}]\n    try{\n        var fd=new FormData()\n        for ( const fileInfo of params){\n            let URL = new Blob([fileInfo.data], { type: 'text/csv;charset=utf-8;' });\n            fd.append(fileInfo.endpoint,URL,fileInfo.fname)\n        }\n        let res = await fetch(\"https://exius.nrdlab.org/Upload\",{\n            headers:{authorization:`templateKey:${templateKey};writeKey:${writeKey}`},\n            method:\"POST\",\n            body: fd})\n        return await res.json()}\n    catch(e){\n        throw e\n    }}\n    async function handleKeydown(event){\n        if (keyView==false || trialHandle){\n            return\n        }\n        trialHandle = true\n        if (trial >= numTrials){\n            keyView = false\n        }\n        if (event.key === \"ArrowLeft\" || event.key === \"ArrowRight\"){\n            let singleTrialData={trial:trial.toString(),previousExploit:exploitMu,keyPressTime:Date.now(),trialStartTime:trialStartTime}\n            bothInvisible=false\n            singleTrialData[\"Block\"] = block\n            if(event.key == \"ArrowLeft\"){\n                greenBar+=lastGreenBar\n                redBar+=lastRedBar\n                lastGreenBar=0\n                lastRedBar=0\n                keyView=false\n                let newDist=sample_normal_to_twenty()\n                singleTrialData[\"newExploit\"] = newDist\n                singleTrialData[\"choice\"] = \"exploit\"\n                singleTrialData[\"exploreSeen\"]=undefined\n                exploitSelect=true\n                await timer(500)\n                exploitSelect=false\n                clearBoard=true\n                singleTrialData[\"exploitBoardClear\"]=Date.now()\n                await timer(1000)\n                exploitMu=newDist\n                lastGreenBar=newDist\n                lastRedBar=20-newDist\n                clearBoard=false\n                keyView=true\n                singleTrialData[\"newExploitBoard\"]=Date.now()\n                trialStartTime = Date.now()\n                currentUnderstanding=newDist\n                trial+=1\n                console.log(\"done\")\n        }\n        if(event.key==\"ArrowRight\"){\n            viewExplore=true\n            let newDist=random_int(20)\n            singleTrialData[\"choice\"] = \"explore\"\n            singleTrialData[\"exploreSeen\"]=newDist\n            greenBar+=lastGreenBar\n            redBar+=lastRedBar\n            lastGreenBar = 0\n            lastRedBar = 0\n            if (newDist > exploitMu){\n                singleTrialData[\"newExploit\"] = newDist\n                console.log(\"greater than\")\n                keyView=false\n                exploreMu=newDist\n                exploreSelect=true\n                singleTrialData[\"newExploreVisible\"] = Date.now()\n                await timer(500)\n                exploreSelect=false\n                singleTrialData[\"newExploreDeslected\"] = Date.now()\n                await timer(500)\n                exploitMu=newDist\n                viewExplore=false\n                replaceExploit.truth=true\n                counter+=1\n                singleTrialData[\"newExploreMove\"] = Date.now()\n                await timer(500)\n                lastGreenBar=newDist\n                lastRedBar=20-newDist\n                keyView = true\n                singleTrialData[\"exploreFinishedMoving\"] = Date.now()\n                trialStartTime=Date.now()\n                currentUnderstanding=newDist\n                trial+=1\n            }\n        else{\n            console.log(\"less than\")\n            keyView=false\n            singleTrialData[\"newExploit\"] = null\n            exploreMu=newDist\n            exploreSelect=true\n            singleTrialData[\"newExploreVisible\"] = Date.now()\n            await timer(500)\n            exploreSelect=false\n            singleTrialData[\"newExploreDeselected\"] = Date.now()\n            await timer(500)\n            singleTrialData[\"newExploreMove\"] = Date.now()\n            viewExplore=false\n            replaceExploit.truth=false\n            counter+=1\n            await timer(500)\n            lastGreenBar=newDist\n            lastRedBar=20-newDist\n            keyView = true\n            singleTrialData[\"exploreFinishedMoving\"] = Date.now()\n            trialStartTime=Date.now()  \n            currentUnderstanding=newDist\n            trial+=1\n            }\n        }\n        bothInvisible=false\n        export_data(singleTrialData)\n        if (trial === numTrials+1){\n            keyView = false\n            bothInvisible=true\n            await timer(300)\n            console.log(greenBar)\n            console.log(lastGreenBar)\n            toNext(gameString,greenBar+lastGreenBar)\n        }\n        }\n        trialHandle = false\n    }\n    function box_mueller() {\n    // all credit to stack exhange\n        var u = 0, v = 0;\n        while(u === 0) u = Math.random(); \n        while(v === 0) v = Math.random();\n        return Math.sqrt( -2.0 * Math.log( u ) ) * Math.cos( 2.0 * Math.PI * v );\n}\n    function sample_normal(mu,sd){\n        return sd*box_mueller()+mu\n    }\n    function sample_normal_to_twenty(){\n        let newNorm=Math.floor(sample_normal(exploitMu,trialSd))\n        newNorm=Math.min(newNorm,20)\n        newNorm=Math.max(newNorm,0)\n        return newNorm\n    }\n    function random_int(){\n        return Math.floor(20*Math.random())\n    }\n    function export_data(data){\n        let iterate_keys=[\n            \"trial\",\n            \"previousExploit\",\n            \"keyPressTime\",\n            \"trialStartTime\",\n            \"choice\",\n            \"newExploit\",\n            \"exploreSeen\",\n            \"exploitBoardClear\",\n            \"newExploitBoard\",\n            \"newExploreVisible\",\n            \"newExploreDeselected\",\n            \"newExploreMove\",\n            \"exploreFinishedMoving\",\n            \"Block\"\n        ];\n        let trialString=\"\"\n        for (const key of iterate_keys){\n            trialString+=`${data[key]},`\n        }\n        gameString+=trialString.substring(0,trialString.length -1) +\"\\n\"\n        if (trial%5===0){\n            sendData()\n        }\n    }\n    async function sendData(){\n        //console.log(await Send_Data_To_Exius([{endpoint:\"TeacherCSV\",fname:`Subject_${id}.csv`,data:gameString}],\"Teacher_Task\",writeKey))\n    }\n    //in:migrateLeft out:migrateOut\n</script>\n<style>\n.greyBox {\n    width:min(40vw, 40vh); \n    height:min(40vw, 40vh); \n    position: absolute;\n    background-color: rgb(207, 202, 202);\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    border: solid black min(.4vh,.4vw);\n}\n.classUnderstanding {\n    position: absolute; \n    top:5vh; \n    left:calc(50vw - min(25vw, 25vh)); \n    width:min(50vw, 50vh); \n    height:min(5vw, 5vh); \n    text-align:center; \n    font-size: min(2vw, 2vh);\n    }\n.points {\n    position: absolute;\n    top:0vh; \n    left:calc(50vw + min(30vw, 30vh)); \n    width: min(20vw, 20vh); \n    height:min(5vw, 5vh); \n    text-align:center; \n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    border: solid black min(.4vh,.4vw);\n    font-size: min(2vw, 2vh);\n}\n.teachingMoves {\n    top:max(-10vh, -10vw); \n    left:max(-5vh,-5vw) ;\n    width: min(50vw,50vh); \n    height:min(5vh,5vw); \n    position: absolute; \n    text-align:center; \n    font-size: min(3vh,3vw)\n}\n.blueLight {\n    width:min(45vh,45vw); \n    height:min(45vh,45vw); \n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    border: solid blue 5px;\n    top: max(-2.5vh,-2.5vw); \n    left: max(-2.5vw,-2.5vh); \n    position: absolute;\n}\n.arrowKey {\n    text-align:center;\n    width:min(30vh,30vw);\n    height:min(5vh,5vw);\n    font-size:min(3vw, 3vh);\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    border: solid black min(.4vh,.4vw);\n}\n.arrowCover {\n    top:min(60vh,60vw); \n    width:min(40vh,40vw);\n    display:flex; \n    justify-content:center; \n    position: absolute;\n}\n.progressBar {\n    width:min(61vh,61vw);\n    height:min(5vh,5vw);\n    background-color:white;\n    position:absolute;\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    border: solid min(.4vh,.4vw) black\n}\n.progressLeft {\n    top:min(.5vh,.5vw);\n    height:min(4vh,4vw);\n    background-color: green;\n    -webkit-animation: flashGreen .5s infinite;  /* Safari 4+ */\n    -moz-animation: flashGreen .5s infinite;  /* Fx 5+ */\n    -o-animation: flashGreen .5s infinite;  /* Opera 12+ */\n    animation: flashGreen .5s infinite;  /* IE 10+, Fx 29+ */\n}\n.progressRight {\n    top:min(.5vh,.5vw);\n    height:min(4vh,4vw);\n    transform:translate(-100%);\n    background-color: red;\n    -webkit-animation: flashRed .5s infinite;  /* Safari 4+ */\n    -moz-animation: flashRed .5s infinite;  /* Fx 5+ */\n    -o-animation: flashRed .5s infinite;  /* Opera 12+ */\n    animation: flashRed .5s infinite;  /* IE 10+, Fx 29+ */\n}\n\n.progressGreen {\n    top:min(.5vh,.5vw);\n    height:min(4vh,4vw);\n    background-color: green;\n}\n.progressRed {\n    transform:translate(-100%);\n    top:min(.5vh,.5vw);\n    height:min(4vh,4vw);\n    background-color: red;\n}\n@keyframes flashGreen {\n    0%, 49%{\n        background-color: green\n    }\n    50%, 100%{\n        background-color:gold\n    }\n}\n@keyframes flashRed {\n    0%, 49%{\n        background-color: red\n    }\n    50%, 100%{\n        background-color:gold\n    }\n}\n</style>\n{#key trial}\n    <h1 class =\"points\">Day {trial} of {numTrials}</h1>\n    <h1 class =\"points\" style=\"left:calc(50vw - min(50vw, 50vh));\">Month {block} of {totalBlocks}</h1>\n{/key}\n<h1 class=\"classUnderstanding\">Total Student Understanding</h1>\n<div style = \"left:calc(50vw - min(30vh,30vw)); top:min(10vh,10vw); position:absolute\">\n    <div class=\"progressBar\" style=\"left:max(-.5vw,-.5vh)\"></div>\n    {#key greenBar}\n        <div class = progressGreen style=\"width:calc((min(60vh,60vw) / {numTrials*20}) * {greenBar}); position:absolute\"></div>\n        {#key lastGreenBar}\n            <div class = progressLeft  style=\"width:calc((min(60vh,60vw) / {numTrials*20}) * {lastGreenBar}); left: calc((min(60vh,60vw) / {numTrials*20}) * {greenBar}); position:absolute\"></div>\n        {/key}\n    {/key}\n    {#key redBar}\n        <div class = progressRed style=\"width:calc((min(60vh,60vw) / {numTrials*20}) * {redBar}); left:min(60vh,60vw); position:absolute\"></div>\n        {#key lastRedBar}\n            <div class = progressRight style=\"width:calc((min(60vh,60vw) / {numTrials*20}) * {lastRedBar}); left: calc(min(60vh,60vw) - ((min(60vh,60vw) / {numTrials*20}) * {redBar}) + 1px); position:absolute\"></div>\n        {/key}\n    {/key}\n</div>\n{#key counter}\n    {#each range as i}\n        {#if counter<numTrials+1}\n            {#if i==0}\n                <div style=\" position: absolute; left:calc(50vw - min(45vw, 45vh)); top:min(30vh,30vw);\">\n                    <h1 class=\"teachingMoves\">Current Teaching Move</h1>\n                    <div class = \"blueLight\" style=\"opacity: {(!exploitSelect)?\"0\":\"1\"};\"></div>\n                    <div class=\"greyBox\" id={`box1: ${counter}`} in:migrateLeftExploit={{replaceExploit:replaceExploit}} out:migrateOut={{ replaceExploit: replaceExploit}}>\n                        <div style=\"top:0px; position: absolute\">\n                            {#if !clearBoard}\n                                <RedGreen numberGreen={exploitMu}/>\n                            {:else}\n                                <RedGreen numberGreen={0} clearBoard={true}/>\n                            {/if}\n                        </div>\n                    </div>\n                    {#if keyView}\n                        <div class = \"arrowCover\">\n                            <h2 class = \"arrowKey\">Left Arrow</h2>\n                        </div>\n                    {/if}\n                </div>\n                {:else}\n                <div style=\" position: absolute; left:calc(50vw + min(5vw, 5vh)); top:min(30vh,30vw)\">\n                <h1 class=\"teachingMoves\">New Teaching Move</h1>\n                <div class=\"greyBox\" id={`box2: ${counter}`} in:migrateLeftExplore={{replaceExploit:replaceExploit}} out:InvisibleOrDown={{replaceExploit:replaceExploit}}>\n                    <div style=\" position: absolute\">\n                        {#if viewExplore}\n                            <RedGreen numberGreen={exploreMu}/>\n                        {:else}\n                            <div style=\"width: min(40vh,40vw); height:min(40vh,40vw); text-align: center; font-size: min(20vh,20vw); top: min(5vh,5vw); position:absolute\">?</div>\n                        {/if}\n                    </div>\n                 </div>\n                 <div class=\"blueLight\" style=\"opacity: {(!exploreSelect)?\"0\":\"1\"};\"></div>\n            {#if keyView}\n                 <div class =\"arrowCover\">\n                    <h2 class = \"arrowKey\">Right Arrow</h2>\n                </div>\n            {/if}\n            </div>\n            {/if}\n        {/if}\n    {/each}\n{/key}\n","<script>\n    import RedGreen from \"./RedGreen.svelte\"\n    export let counter=0\n    //export let top=\"50px\"\n    //export let left =\"200px\"\n    export const viewNumber=2\n    export let gameString=\"\"\n    let trialSd = 3\n    export let numTrials =30\n    let trial = 1\n    let range=[...Array(viewNumber).keys()]\n    let trialStartTime=Date.now()\n    let viewExplore=false\n    let exploitMu=random_int()\n    let exploreMu=random_int()\n    let exploreSelect =false\n    let exploitSelect =false\n    let replaceExploit={truth:false}\n    let keyView=true\n    let clearBoard=false\n    let currentUnderstanding=exploitMu\n    let lastGreenBar=0\n    let lastRedBar=0\n    let greenBar = 0\n    let redBar=0\n    let trialHandle = false\n    export let toNext\n    export let writeKey\n    export let id\n    export let bothInvisible=true\n    export let block\n    export let totalBlocks\n    console.log(gameString)\n    //$: oldExploit =replaceExploit\n    function migrateLeftExplore(node,{delay=0,duration=500}){\n        if (bothInvisible){\n            return {\n                 delay:0,\n                duration:0}\n        }\n        console.log(`migrateLeftExplore:${true}`)\n            return {\n                delay,\n                duration,\n                css: (t,u)=> `transform: translateX(calc(${100*u}vw)) `\n            }\n}\nfunction migrateLeftExploit(node,{replaceExploit,delay=0,duration=500}){\n    if (bothInvisible){\n            return {\n                 delay:0,\n                duration:0}\n        }\n    console.log(`migrateLeftExploit:${replaceExploit}`)\n        if (replaceExploit.truth){\n            return {\n                delay,\n                duration,\n                css: (t,u)=> `transform: translateX(min(${50*u}vw,${50*u}vh)) `\n            }\n        }\n        else{\n            return {}\n        }\n}\n    function migrateOut(node,{replaceExploit,delay=0,duration=500}){\n        if (bothInvisible){\n            return {\n                 delay:0,\n                duration:0}\n        }\n        console.log(`migrateOut:${replaceExploit}`)\n        if (replaceExploit.truth){\n            return {\n                delay,\n                duration,\n                css: (t,u)=> `transform: translateX(calc(${-100*u}vw)) `\n        }\n        }\n        else{\n            return {}\n        }\n       }\n    function InvisibleOrDown(node,{replaceExploit,delay=0,duration=500}){\n        if (bothInvisible){\n            return {\n                 delay:0,\n                duration:0}\n        }\n        console.log(`invisibleOrDown:${replaceExploit}`)\n        if (! replaceExploit.truth){\n            return {\n            delay,\n            duration,\n            css: (t,u)=> `transform: translateY(calc(${100*u}vh)) `\n        }}\n        else{\n            return {\n            css: ()=> `visibility: hidden;display: none;`\n        }\n        }\n    }\n    async function timer(time){\n        return await new Promise(r => setTimeout(r, time));\n    }\n    async function Send_Data_To_Exius(params,templateKey,writeKey){\n    // [{endpoint:Horizon_CSV,data:data,fname:fname}]\n    try{\n        var fd=new FormData()\n        for ( const fileInfo of params){\n            let URL = new Blob([fileInfo.data], { type: 'text/csv;charset=utf-8;' });\n            fd.append(fileInfo.endpoint,URL,fileInfo.fname)\n        }\n        let res = await fetch(\"https://exius.nrdlab.org/Upload\",{\n            headers:{authorization:`templateKey:${templateKey};writeKey:${writeKey}`},\n            method:\"POST\",\n            body: fd})\n        return await res.json()}\n    catch(e){\n        throw e\n    }}\n    async function handleButton(side){\n        if (keyView==false || trialHandle){\n            return\n        }\n        trialHandle = true\n        if (trial >= numTrials){\n            keyView = false\n        }\n        let singleTrialData={trial:trial.toString(),previousExploit:exploitMu,keyPressTime:Date.now(),trialStartTime:trialStartTime}\n        bothInvisible=false\n        singleTrialData[\"Block\"] = block\n        if(side == \"left\"){\n            greenBar+=lastGreenBar\n            redBar+=lastRedBar\n            lastGreenBar=0\n            lastRedBar=0\n            keyView=false\n            let newDist=sample_normal_to_twenty()\n            singleTrialData[\"newExploit\"] = newDist\n            singleTrialData[\"choice\"] = \"exploit\"\n            singleTrialData[\"exploreSeen\"]=undefined\n            exploitSelect=true\n            await timer(500)\n            exploitSelect=false\n            clearBoard=true\n            singleTrialData[\"exploitBoardClear\"]=Date.now()\n            await timer(1000)\n            exploitMu=newDist\n            lastGreenBar=newDist\n            lastRedBar=20-newDist\n            clearBoard=false\n            keyView=true\n            singleTrialData[\"newExploitBoard\"]=Date.now()\n            trialStartTime = Date.now()\n            currentUnderstanding=newDist\n            trial+=1\n            console.log(\"done\")\n        }\n        if(side==\"right\"){\n            viewExplore=true\n            let newDist=random_int(20)\n            singleTrialData[\"choice\"] = \"explore\"\n            singleTrialData[\"exploreSeen\"]=newDist\n            greenBar+=lastGreenBar\n            redBar+=lastRedBar\n            lastGreenBar = 0\n            lastRedBar = 0\n            if (newDist > exploitMu){\n                singleTrialData[\"newExploit\"] = newDist\n                console.log(\"greater than\")\n                keyView=false\n                exploreMu=newDist\n                exploreSelect=true\n                singleTrialData[\"newExploreVisible\"] = Date.now()\n                await timer(500)\n                exploreSelect=false\n                singleTrialData[\"newExploreDeslected\"] = Date.now()\n                await timer(500)\n                exploitMu=newDist\n                viewExplore=false\n                replaceExploit.truth=true\n                counter+=1\n                singleTrialData[\"newExploreMove\"] = Date.now()\n                await timer(500)\n                lastGreenBar=newDist\n                lastRedBar=20-newDist\n                keyView = true\n                singleTrialData[\"exploreFinishedMoving\"] = Date.now()\n                trialStartTime=Date.now()\n                currentUnderstanding=newDist\n                trial+=1\n            }\n        else{\n            console.log(\"less than\")\n            keyView=false\n            singleTrialData[\"newExploit\"] = null\n            exploreMu=newDist\n            exploreSelect=true\n            singleTrialData[\"newExploreVisible\"] = Date.now()\n            await timer(500)\n            exploreSelect=false\n            singleTrialData[\"newExploreDeselected\"] = Date.now()\n            await timer(500)\n            singleTrialData[\"newExploreMove\"] = Date.now()\n            viewExplore=false\n            replaceExploit.truth=false\n            counter+=1\n            await timer(500)\n            lastGreenBar=newDist\n            lastRedBar=20-newDist\n            keyView = true\n            singleTrialData[\"exploreFinishedMoving\"] = Date.now()\n            trialStartTime=Date.now()  \n            currentUnderstanding=newDist\n            trial+=1\n            }\n        }\n        bothInvisible=false\n        export_data(singleTrialData)\n        if (trial === numTrials+1){\n            keyView = false\n            bothInvisible=true\n            await timer(300)\n            console.log(greenBar)\n            console.log(lastGreenBar)\n            toNext(gameString,greenBar+lastGreenBar)\n        }\n        trialHandle = false\n    }\n    function box_mueller() {\n    // all credit to stack exhange\n        var u = 0, v = 0;\n        while(u === 0) u = Math.random(); \n        while(v === 0) v = Math.random();\n        return Math.sqrt( -2.0 * Math.log( u ) ) * Math.cos( 2.0 * Math.PI * v );\n}\n    function sample_normal(mu,sd){\n        return sd*box_mueller()+mu\n    }\n    function sample_normal_to_twenty(){\n        let newNorm=Math.floor(sample_normal(exploitMu,trialSd))\n        newNorm=Math.min(newNorm,20)\n        newNorm=Math.max(newNorm,0)\n        return newNorm\n    }\n    function random_int(){\n        return Math.floor(20*Math.random())\n    }\n    function export_data(data){\n        let iterate_keys=[\n            \"trial\",\n            \"previousExploit\",\n            \"keyPressTime\",\n            \"trialStartTime\",\n            \"choice\",\n            \"newExploit\",\n            \"exploreSeen\",\n            \"exploitBoardClear\",\n            \"newExploitBoard\",\n            \"newExploreVisible\",\n            \"newExploreDeselected\",\n            \"newExploreMove\",\n            \"exploreFinishedMoving\",\n            \"Block\"\n        ];\n        let trialString=\"\"\n        for (const key of iterate_keys){\n            trialString+=`${data[key]},`\n        }\n        gameString+=trialString.substring(0,trialString.length -1) +\"\\n\"\n        if (trial%5===0){\n            sendData()\n        }\n    }\n    async function sendData(){\n        //console.log(await Send_Data_To_Exius([{endpoint:\"TeacherCSV\",fname:`Subject_${id}.csv`,data:gameString}],\"Teacher_Task\",writeKey))\n    }\n    //in:migrateLeft out:migrateOut\n</script>\n<style>\n.greyBox {\n    width:min(40vw, 40vh); \n    height:min(40vw, 40vh); \n    position: absolute;\n    background-color: rgb(207, 202, 202);\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    border: solid black min(.4vh,.4vw);\n}\n.classUnderstanding {\n    position: absolute; \n    top:5vh; \n    left:calc(50vw - min(25vw, 25vh)); \n    width:min(50vw, 50vh); \n    height:min(5vw, 5vh); \n    text-align:center; \n    font-size: min(2vw, 2vh);\n    }\n.points {\n    position: absolute;\n    top:0vh; \n    left:calc(50vw + min(30vw, 30vh)); \n    width: min(20vw, 20vh); \n    height:min(5vw, 5vh); \n    text-align:center; \n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    border: solid black min(.4vh,.4vw);\n    font-size: min(2vw, 2vh);\n}\n.teachingMoves {\n    top:max(-10vh, -10vw); \n    left:max(-5vh,-5vw) ;\n    width: min(50vw,50vh); \n    height:min(5vh,5vw); \n    position: absolute; \n    text-align:center; \n    font-size: min(3vh,3vw)\n}\n.blueLight {\n    width:min(45vh,45vw); \n    height:min(45vh,45vw); \n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    border: solid blue 5px;\n    top: max(-2.5vh,-2.5vw); \n    left: max(-2.5vw,-2.5vh); \n    position: absolute;\n}\n.arrowKey {\n    text-align:center;\n    width:min(30vh,30vw);\n    height:min(5vh,5vw);\n    font-size:min(3vw, 3vh);\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    border: solid black min(.4vh,.4vw);\n}\n.arrowCover {\n    top:min(60vh,60vw); \n    width:min(40vh,40vw);\n    display:flex; \n    justify-content:center; \n    position: absolute;\n}\n.progressBar {\n    width:min(61vh,61vw);\n    height:min(5vh,5vw);\n    background-color:white;\n    position:absolute;\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    border: solid min(.4vh,.4vw) black\n}\n.progressLeft {\n    top:min(.5vh,.5vw);\n    height:min(4vh,4vw);\n    background-color: green;\n    -webkit-animation: flashGreen .5s 2;  /* Safari 4+ */\n    -moz-animation: flashGreen .5s 2;  /* Fx 5+ */\n    -o-animation: flashGreen .5s 2;  /* Opera 12+ */\n    animation: flashGreen .5s 2;  /* IE 10+, Fx 29+ */\n}\n.progressRight {\n    top:min(.5vh,.5vw);\n    height:min(4vh,4vw);\n    transform:translate(-100%);\n    background-color: red;\n    -webkit-animation: flashRed .5s 2;  /* Safari 4+ */\n    -moz-animation: flashRed .5s 2;  /* Fx 5+ */\n    -o-animation: flashRed .5s 2;  /* Opera 12+ */\n    animation: flashRed .5s 2;  /* IE 10+, Fx 29+ */\n}\n\n.progressGreen {\n    top:min(.5vh,.5vw);\n    height:min(4vh,4vw);\n    background-color: green;\n}\n.progressRed {\n    transform:translate(-100%);\n    top:min(.5vh,.5vw);\n    height:min(4vh,4vw);\n    background-color: red;\n}\n@keyframes flashGreen {\n    0%, 49%{\n        background-color: green\n    }\n    50%, 100%{\n        background-color:gold\n    }\n}\n@keyframes flashRed {\n    0%, 49%{\n        background-color: red\n    }\n    50%, 100%{\n        background-color:gold\n    }\n}\n</style>\n{#key trial}\n    <h1 class =\"points\">Day {trial} of {numTrials}</h1>\n    <h1 class =\"points\" style=\"left:calc(50vw - min(50vw, 50vh));\">Month {block} of {totalBlocks}</h1>\n{/key}\n<h1 class=\"classUnderstanding\">Total Student Understanding</h1>\n<div style = \"left:calc(50vw - min(30vh,30vw)); top:min(10vh,10vw); position:absolute\">\n    <div class=\"progressBar\" style=\"left:max(-.5vw,-.5vh)\"></div>\n    {#key greenBar}\n        <div class = progressGreen style=\"width:calc((min(60vh,60vw) / {numTrials*20}) * {greenBar}); position:absolute\"></div>\n        {#key lastGreenBar}\n            <div class = progressLeft  style=\"width:calc((min(60vh,60vw) / {numTrials*20}) * {lastGreenBar}); left: calc((min(60vh,60vw) / {numTrials*20}) * {greenBar} - 1px); position:absolute\"></div>\n        {/key}\n    {/key}\n    {#key redBar}\n        <div class = progressRed style=\"width:calc((min(60vh,60vw) / {numTrials*20}) * {redBar}); left:min(60vh,60vw); position:absolute\"></div>\n        {#key lastRedBar}\n            <div class = progressRight style=\"width:calc((min(60vh,60vw) / {numTrials*20}) * {lastRedBar}); left: calc(min(60vh,60vw) - ((min(60vh,60vw) / {numTrials*20}) * {redBar}) + 1px); position:absolute\"></div>\n        {/key}\n    {/key}\n</div>\n{#key counter}\n    {#each range as i}\n        {#if counter<numTrials+1}\n            {#if i==0}\n                <div style=\" position: absolute; left:calc(50vw - min(45vw, 45vh)); top:min(30vh,30vw);\">\n                    <h1 class=\"teachingMoves\">Current Teaching Move</h1>\n                    <div class = \"blueLight\" style=\"opacity: {(!exploitSelect)?\"0\":\"1\"};\"></div>\n                    <button class=\"greyBox\" id={`box1: ${counter}`} in:migrateLeftExploit={{replaceExploit:replaceExploit}} out:migrateOut={{ replaceExploit: replaceExploit}} on:click = {()=>{handleButton(\"left\")}}>\n                        <div style=\"top:0px; position: absolute; left:-.1vw\">\n                            {#if !clearBoard}\n                                <RedGreen numberGreen={exploitMu}/>\n                            {:else}\n                                <RedGreen numberGreen={0} clearBoard={true}/>\n                            {/if}\n                        </div>\n                    </button>\n                </div>\n            {:else}\n                <div style=\" position: absolute; left:calc(50vw + min(5vw, 5vh)); top:min(30vh,30vw)\">\n                <div class=\"blueLight\" style=\"opacity: {(!exploreSelect)?\"0\":\"1\"};\"></div>\n                <h1 class=\"teachingMoves\">New Teaching Move</h1>\n                <button class=\"greyBox\" id={`box2: ${counter}`} in:migrateLeftExplore={{replaceExploit:replaceExploit}} out:InvisibleOrDown={{replaceExploit:replaceExploit}} on:click={()=>{handleButton(\"right\")}}>\n                    <div style=\" position: absolute; top:0px; left:-.1vw\">\n                        {#if viewExplore}\n                            <RedGreen numberGreen={exploreMu}/>\n                        {:else}\n                            <div style=\"width: min(40vh,40vw); height:min(40vh,40vw); text-align: center; font-size: min(20vh,20vw); top: min(5vh,5vw); position:absolute\">?</div>\n                        {/if}\n                    </div>\n                </button>     \n                </div>\n            {/if}\n        {/if}\n    {/each}\n{/key}\n","<script>\n    export let breakTruth={truth:false}\n    export let nextInstruction=null\n    export let previousInstruction=null\n    export let replayAnimation=null\n    export let backSkip =1\n    export let forwardSkip =1\n    export let display = true\n</script>\n<style>\n    .buttonCover{\n    position:absolute; \n    top:calc(80vh); \n    width:min(20vh,20vw); \n    height: min(5vh,5vw); \n    text-align: center; \n    border: solid black min(.4vw,.4vh);\n    font-size: min(2vh,2vw);\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    text-align: center;\n    }\n    .buttonCover:hover{\n    box-shadow: 0 0 min(2vh,2vw) rgb(160, 160, 221);\n    cursor: pointer;\n    }\n</style>\n{#if !breakTruth.truth && display}\n    {#if nextInstruction && previousInstruction}\n        <button class=\"buttonCover\" style=\"left:calc(50vw - min(36vh,36vw))\" on:click={previousInstruction(backSkip)}>Back</button>\n        <button class=\"buttonCover\" style = \"left:calc(50vw + min(16vh,16vw))\" on:click={nextInstruction(forwardSkip)}>Next</button>\n        {#if replayAnimation}\n            <button class=\"buttonCover\" style = \"left:calc(50vw - min(10vh,10vw))\" on:click={replayAnimation()}>Replay Animation</button>\n        {/if}\n    {:else if nextInstruction}\n        <button class = \"buttonCover\" style = \"left:calc(50vw - min(10vh,10vw))\" on:click={nextInstruction(forwardSkip)}>Next</button>\n    {:else}\n        <button class = \"buttonCover\" style = \"left:calc(50vw - min(10vh,10vw))\" on:click={previousInstruction(backSkip)}>Back</button>\n    {/if}\n{/if}","<script>\n    import RedGreen from \"../RedGreen.svelte\"\n    export let passedText = \"\"\n    export let exploitMu = 10\n    export let clearBoard = false\n    export let exploitSelect = true\n</script>\n<style>\n.greyBox {\n    width:min(40vw, 40vh); \n    height:min(40vw, 40vh); \n    position: absolute;\n    background-color: rgb(207, 202, 202);\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    border: solid black min(.2vh,.2vw);\n}\n.teachingMoves {\n    top:max(-10vh, -10vw); \n    left:max(-5vh,-5vw) ;\n    width: min(50vw,50vh); \n    height:min(5vh,5vw); \n    position: absolute; \n    text-align:center; \n    font-size: min(3vh,3vw)\n}\n.blueLight {\n    width:min(45vh,45vw); \n    height:min(45vh,45vw); \n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    border: solid blue 5px;\n    top: max(-2.5vh,-2.5vw); \n    left: max(-2.5vw,-2.5vh); \n    position: absolute;\n}\n.descriptionText{\n        text-align:center;\n        width:min(90vw,150vh);\n        font-size:min(3vh,3vw);\n        left:max(5vw,calc((100vw - 150vh)/2));\n        position:absolute;\n    }\n</style>\n<h1 class=\"descriptionText\">{passedText}</h1>\n<div style=\" position: absolute; left:calc(50vw - min(20vw, 20vh)); top:min(30vh,30vw);\">\n    <h1 class=\"teachingMoves\">Current Teaching Move</h1>\n    <div class = \"blueLight\" style=\"opacity: {(!exploitSelect)?\"0\":\"1\"};\"></div>\n    <div class=\"greyBox\">\n        <div style=\"top:0px; position: absolute\">\n            {#if !clearBoard}\n                <RedGreen numberGreen={exploitMu}/>\n            {:else}\n                <RedGreen numberGreen={0} clearBoard={true}/>\n            {/if}\n        </div>\n    </div>\n</div>","<script>\n    import RedGreen from \"../RedGreen.svelte\"\n    export let breakNav\n    export let counter=0\n    export const viewNumber=2\n    let range=[...Array(viewNumber).keys()]\n    export let delayGoodExplore=false\n    export let delayBadExplore=false\n    export let delayExploit = false\n    export let viewExplore=false\n    export let exploitMu=12\n    export let exploreMu=5\n    export let exploitMu2=14\n    export let exploreSelect =false\n    export let exploitSelect =false\n    export let replaceExploit={truth:true}\n    export let clearBoard=false\n    export let bothInvisible={truth:true}\n    export let keyDisplay = false\n    export let noReplaceExplore=false\n    export let pointCounter=false\n    export let points=14\n    export let delayTime=1000\n    let invisibleExplore=false\n    let keyView=keyDisplay\n    if (delayGoodExplore){\n        delayedGoodExplore()\n    }\n    if (delayBadExplore){\n        delayedBadExplore()\n    }\n    if (delayExploit){\n        delayedExploit()\n    }\nfunction migrateLeftExplore(node,{delay=0,duration=500}){\n        if (bothInvisible.truth){\n            return {\n                delay:0,\n                duration:0\n            }\n        }\n            return {\n                delay,\n                duration,\n                css: (t,u)=> `transform: translateX(calc(${100*u}vw)) `\n            }\n}\nfunction migrateLeftExploit(node,{replaceExploit,delay=0,duration=500}){\n    if (bothInvisible.truth){\n            return {\n                 delay:0,\n                duration:0}\n        }\n        if (replaceExploit.truth){\n            return {\n                delay,\n                duration,\n                css: (t,u)=> `transform: translateX(min(${50*u}vw,${50*u}vh)) `\n            }\n        }\n        else{\n            return {}\n        }\n}\n    function migrateOut(node,{replaceExploit,delay=0,duration=500}){\n        if (bothInvisible.truth){\n            return { \n                delay:0,\n                duration:0}\n        }\n        if (replaceExploit.truth){\n            return {\n                delay,\n                duration,\n                css: (t,u)=> `transform: translateX(calc(${-100*u}vw)) `\n        }\n        }\n        else{\n            return {}\n        }\n       }\n    function InvisibleOrDown(node,{replaceExploit,delay=0,duration=500}){\n        if (bothInvisible.truth){\n            return {\n                delay:0,\n                duration:0\n            }\n        }\n        if (! replaceExploit.truth){\n            return {\n            delay,\n            duration,\n            css: (t,u)=> `transform: translateY(calc(${100*u}vh)) `\n        }}\n        else{\n            return {\n            css: ()=> `visibility: hidden;display: none;`\n        }\n        }\n    }\n    async function timer(time){\n        return await new Promise(r => setTimeout(r, time));\n    }\n\n    async function delayedGoodExplore(){\n        if (keyDisplay) keyView=false\n        breakNav(true)\n        await timer(delayTime)\n        bothInvisible={truth:false}\n        viewExplore=true\n        exploreSelect=true\n        await timer(500)\n        exploreSelect=false\n        await timer(1000)\n        exploitMu=exploreMu\n        viewExplore=false\n        replaceExploit.truth=true\n        counter+=1\n        if (noReplaceExplore) invisibleExplore=true\n        await timer(500)\n        breakNav(false)\n        if (keyDisplay) keyView=true\n        bothInvisible={truth:true}\n    }\n    async function delayedBadExplore(){\n        if (keyDisplay) keyView=false\n        breakNav(true)\n        await timer(delayTime)\n        bothInvisible={truth:false}\n        viewExplore=true\n        exploreSelect=true\n        await timer(500)\n        exploreSelect=false\n        await timer(1000)\n        viewExplore=false\n        replaceExploit.truth=false\n        counter+=1\n        if (noReplaceExplore) invisibleExplore=true\n        await timer(500)\n        breakNav(false)\n        if (keyDisplay) keyView=true\n        bothInvisible={truth:true}\n    }\n    async function delayedExploit(){\n        if (keyDisplay) keyView=false\n        breakNav(true)\n        await timer(delayTime)\n        exploitSelect=true\n        bothInvisible={truth:false}\n        await timer(500)\n        clearBoard=true\n        exploitSelect=false\n        await timer(1000)\n        clearBoard=false\n        exploitMu=exploitMu2\n        counter+=1\n        breakNav(false)\n        if (keyDisplay) keyView=true\n        bothInvisible={truth:true}\n    }\n    </script>\n<style>\n.greyBox {\n    width:min(40vw, 40vh); \n    height:min(40vw, 40vh); \n    position: absolute;\n    background-color: rgb(207, 202, 202);\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    border: solid black min(.4vh,.4vw);\n}\n.teachingMoves {\n    top:max(-10vh, -10vw); \n    left:max(-5vh,-5vw) ;\n    width: min(50vw,50vh); \n    height:min(5vh,5vw); \n    position: absolute; \n    text-align:center; \n    font-size: min(3vh,3vw)\n}\n.blueLight {\n    width:min(45vh,45vw); \n    height:min(45vh,45vw); \n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    border: solid blue 5px;\n    top: max(-2.5vh,-2.5vw); \n    left: max(-2.5vw,-2.5vh); \n    position: absolute;\n}\n.arrowKey {\n    text-align:center;\n    width:min(30vh,30vw);\n    height:min(5vh,5vw);\n    font-size:min(3vw, 3vh);\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    border: solid black min(.4vh,.4vw);\n}\n.arrowCover {\n    top:min(60vh,60vw); \n    width:min(40vh,40vw);\n    display:flex; \n    justify-content:center; \n    position: absolute;\n}\n</style>\n{#key counter}\n    {#if pointCounter}\n        <h1 style=\"position: absolute; top:0vh; left:calc(50vw + -400px); width:800px; height:50px; text-align:center; border:solid black 2px\">Current Classroom Understanding: {Math.round(points/20*100)}%</h1>\n    {/if}\n    {#each range as i}\n        {#if i==0}\n            <div style=\" position: absolute; left:calc(50vw - min(45vw, 45vh)); top:min(30vh,30vw);\">\n            <h1 class=\"teachingMoves\">Current Teaching Move</h1>\n            <div class = \"blueLight\" style=\"opacity: {(!exploitSelect)?\"0\":\"1\"};\"></div>\n                <div class=\"greyBox\" id={`box1: ${counter}`} in:migrateLeftExploit={{replaceExploit:replaceExploit}} out:migrateOut={{ replaceExploit: replaceExploit}}>\n                    <div style=\"top:0px; position: absolute\">\n                        {#if !clearBoard}\n                            <RedGreen numberGreen={exploitMu}/>\n                        {:else}\n                            <RedGreen numberGreen={0} clearBoard={true}/>\n                        {/if}\n                    </div>\n                </div>\n            {#if keyView}\n                <div class = \"arrowCover\">\n                    <h2 class = \"arrowKey\">Left Arrow</h2>\n                </div>\n            {/if}\n            </div>\n            {:else}\n            <div style=\" position: absolute; left:calc(50vw + min(5vw, 5vh)); top:min(30vh,30vw)\">\n            <h1 class=\"teachingMoves\">New Teaching Move</h1>\n            <div class=\"greyBox\" id={`box2: ${counter}`} in:migrateLeftExplore={{replaceExploit:replaceExploit}} out:InvisibleOrDown={{replaceExploit:replaceExploit}}>\n                <div style=\"top: 0px; position: absolute\">\n                    {#if viewExplore}\n                        <RedGreen numberGreen={exploreMu}/>\n                    {:else}\n                        <div style=\"width: min(40vh,40vw); height:min(40vh,40vw); text-align: center; font-size: min(20vh,20vw); top: min(5vh,5vw); position:absolute\">?</div>\n                    {/if}\n                </div>\n                </div>\n                <div class=\"blueLight\" style=\"opacity: {(!exploreSelect)?\"0\":\"1\"};\"></div>\n        {#if keyView}\n                <div class =\"arrowCover\">\n                <h2 class = \"arrowKey\">Right Arrow</h2>\n            </div>\n        {/if}\n        </div>\n        {/if}\n    {/each}\n{/key}","<script>\nexport let nextInstruction\nasync function timer(time){\n        return await new Promise(r => setTimeout(r, time));\n    }\nasync function requestFullScreen(){\n    var elem=document.documentElement\n    var requestMethod = elem.requestFullScreen || elem.webkitRequestFullScreen || elem.mozRequestFullScreen || elem.msRequestFullScreen;\n    if (requestMethod) {\n        requestMethod.call(elem)\n    }\n    await timer(100)\n    nextInstruction(1)\n    }\n</script>\n<style>\n    .buttonCover{\n    position:absolute; \n    top:60vh;\n    left:calc(50vw - min(20vw,20vh));\n    width:min(40vh,40vw); \n    height: min(20vh,20vw); \n    text-align: center; \n    border: solid black min(.4vw,.4vh);\n    font-size: min(5vh,5vw);\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    text-align: center;\n    }\n    .buttonCover:hover{\n    box-shadow: 0 0 min(2vh,2vw) rgb(160, 160, 221);\n    cursor: pointer;\n    }\n    .bigText{\n    font-size:min(10vh,10vw);\n    text-align:center;\n    position:absolute;\n    width:80vw;\n    left:10vw;\n    }\n</style>\n<h1 class=\"bigText\" style=\"text-align: center\">This Experiment is Best Viewed In Fullscreen</h1>\n<button class=\"buttonCover\" on:click={requestFullScreen}>Go Fullscreen</button>","<svelte:window on:keydown={handleKeydown}/>\n<script>\n    import RedGreen from \"../RedGreen.svelte\"\n    export let counter=0\n    export const viewNumber=2\n    export let gameString=\"\"\n    let trialSd = 3\n    let numTrials =4\n    let trial = 1\n    let range=[...Array(viewNumber).keys()]\n    let trialStartTime=Date.now()\n    let viewExplore=false\n    let exploitMu=15\n    let exploreMu=random_int()\n    let exploreSelect =false\n    let exploitSelect =false\n    let replaceExploit={truth:false}\n    let keyView=true\n    let clearBoard=false\n    let currentUnderstanding=exploitMu\n    let lastGreenBar=0\n    let lastRedBar=0\n    let greenBar = 0\n    let redBar=0\n    export let trialDescriptions=[]\n    export let toNext\n    export let bothInvisible=true\n    export let breakTruth = {truth:false}\n    function migrateLeftExplore(node,{delay=0,duration=500}){\n        if (bothInvisible){\n            return {\n                 delay:0,\n                duration:0}\n        }\n        console.log(`migrateLeftExplore:${true}`)\n            return {\n                delay,\n                duration,\n                css: (t,u)=> `transform: translateX(calc(${100*u}vw)) `\n            }\n    }\n    function migrateLeftExploit(node,{replaceExploit,delay=0,duration=500}){\n        if (bothInvisible){\n                return {\n                    delay:0,\n                    duration:0}\n            }\n    console.log(`migrateLeftExploit:${replaceExploit}`)\n        if (replaceExploit.truth){\n            return {\n                delay,\n                duration,\n                css: (t,u)=> `transform: translateX(min(${50*u}vw,${50*u}vh)) `\n            }\n        }\n        else{\n            return {}\n        }\n}\n    function migrateOut(node,{replaceExploit,delay=0,duration=500}){\n        if (bothInvisible){\n            return {\n                 delay:0,\n                duration:0}\n        }\n        console.log(`migrateOut:${replaceExploit}`)\n        if (replaceExploit.truth){\n            return {\n                delay,\n                duration,\n                css: (t,u)=> `transform: translateX(calc(${-100*u}vw)) `\n        }\n        }\n        else{\n            return {}\n        }\n       }\n    function InvisibleOrDown(node,{replaceExploit,delay=0,duration=500}){\n        if (bothInvisible){\n            return {\n                 delay:0,\n                duration:0}\n        }\n        console.log(`invisibleOrDown:${replaceExploit}`)\n        if (! replaceExploit.truth){\n            return {\n            delay,\n            duration,\n            css: (t,u)=> `transform: translateY(calc(${100*u}vh)) `\n        }}\n        else{\n            return {\n            css: ()=> `visibility: hidden;display: none;`\n        }\n        }\n    }\n    async function timer(time){\n        return await new Promise(r => setTimeout(r, time));\n    }\n    async function Send_Data_To_Exius(params,templateKey,writeKey){\n    // [{endpoint:Horizon_CSV,data:data,fname:fname}]\n    try{\n        var fd=new FormData()\n        for ( const fileInfo of params){\n            let URL = new Blob([fileInfo.data], { type: 'text/csv;charset=utf-8;' });\n            fd.append(fileInfo.endpoint,URL,fileInfo.fname)\n        }\n        let res = await fetch(\"https://exius.nrdlab.org/Upload\",{\n            headers:{authorization:`templateKey:${templateKey};writeKey:${writeKey}`},\n            method:\"POST\",\n            body: fd})\n        return await res.json()}\n    catch(e){\n        throw e\n    }}\n    async function handleKeydown(event){\n        console.log(event.key)\n        if (keyView==false){\n            return\n        }\n        if (event.key === \"ArrowLeft\" || event.key === \"ArrowRight\"){\n            let singleTrialData={trial:trial.toString(),previousExploit:exploitMu,keyPressTime:Date.now(),trialStartTime:trialStartTime}\n            bothInvisible=false\n            if(event.key == \"ArrowLeft\"){\n                greenBar+=lastGreenBar\n                redBar+=lastRedBar\n                lastGreenBar=0\n                lastRedBar=0\n                keyView=false\n                let newDist=sample_normal_to_twenty()\n                exploitSelect=true\n                await timer(500)\n                exploitSelect=false\n                clearBoard=true\n                await timer(1000)\n                exploitMu=newDist\n                lastGreenBar=newDist\n                lastRedBar=20-newDist\n                clearBoard=false\n                keyView=true\n                trialStartTime = Date.now()\n                currentUnderstanding=newDist\n                trial+=1\n                console.log(\"done\")\n        }\n        if(event.key==\"ArrowRight\"){\n            viewExplore=true\n            let newDist=random_int(20)\n            greenBar+=lastGreenBar\n            redBar+=lastRedBar\n            lastGreenBar = 0\n            lastRedBar = 0\n            if (newDist > exploitMu){\n                console.log(\"greater than\")\n                keyView=false\n                exploreMu=newDist\n                exploreSelect=true\n                await timer(500)\n                exploreSelect=false\n                await timer(500)\n                exploitMu=newDist\n                viewExplore=false\n                replaceExploit.truth=true\n                counter+=1\n                await timer(500)\n                lastGreenBar=newDist\n                lastRedBar=20-newDist\n                keyView = true\n                trialStartTime=Date.now()\n                currentUnderstanding=newDist\n                trial+=1\n            }\n        else{\n            console.log(\"less than\")\n            keyView=false\n            exploreMu=newDist\n            exploreSelect=true\n            await timer(500)\n            exploreSelect=false\n            await timer(500)\n            viewExplore=false\n            replaceExploit.truth=false\n            counter+=1\n            await timer(500)\n            lastGreenBar=newDist\n            lastRedBar=20-newDist\n            keyView = true\n            trialStartTime=Date.now()  \n            currentUnderstanding=newDist\n            trial+=1\n            }\n        }\n        if (trial === numTrials+1){\n            bothInvisible = true\n        }\n        else{\n            bothInvisible=false\n        }\n        if (trial === numTrials+1){\n            keyView = false\n            await timer(1200)\n            toNext(gameString,greenBar+lastGreenBar)\n        }\n        }\n    }\n    function box_mueller() {\n    // all credit to stack exhange\n        var u = 0, v = 0;\n        while(u === 0) u = Math.random(); \n        while(v === 0) v = Math.random();\n        return Math.sqrt( -2.0 * Math.log( u ) ) * Math.cos( 2.0 * Math.PI * v );\n}\n    function sample_normal(mu,sd){\n        return sd*box_mueller()+mu\n    }\n    function sample_normal_to_twenty(){\n        let newNorm=Math.floor(sample_normal(exploitMu,trialSd))\n        newNorm=Math.min(newNorm,20)\n        newNorm=Math.max(newNorm,0)\n        return newNorm\n    }\n    function random_int(){\n        return Math.floor(20*Math.random())\n    }\n    //in:migrateLeft out:migrateOut\n</script>\n<style>\n.greyBox {\n    width:min(40vw, 40vh); \n    height:min(40vw, 40vh); \n    position: absolute;\n    background-color: rgb(207, 202, 202);\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    border: solid black min(.4vh,.4vw);\n}\n.teachingMoves {\n    top:max(-10vh, -10vw); \n    left:max(-5vh,-5vw) ;\n    width: min(50vw,50vh); \n    height:min(5vh,5vw); \n    position: absolute; \n    text-align:center; \n    font-size: min(3vh,3vw)\n}\n.blueLight {\n    width:min(45vh,45vw); \n    height:min(45vh,45vw); \n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    border: solid blue 5px;\n    top: max(-2.5vh,-2.5vw); \n    left: max(-2.5vw,-2.5vh); \n    position: absolute;\n}\n.arrowKey {\n    text-align:center;\n    width:min(30vh,30vw);\n    height:min(5vh,5vw);\n    font-size:min(3vw, 3vh);\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    border: solid black min(.4vh,.4vw);\n}\n.arrowCover {\n    top:min(60vh,60vw); \n    width:min(40vh,40vw);\n    display:flex; \n    justify-content:center; \n    position: absolute;\n}\n.descriptionText{\n        text-align:center;\n        width:min(90vw,180vh);\n        font-size:min(3vh,3vw);\n        left:max(5vw,calc((100vw - 180vh)/2));\n        position:absolute;\n    }\n</style>\n{#if !breakTruth.truth}\n    {#key trial}\n        <h1 class=\"descriptionText\">{trialDescriptions[trial-1]}</h1>\n    {/key}\n    {#key counter}\n        {#each range as i}\n            {#if counter<numTrials+1}\n                {#if i==0}\n                    <div style=\" position: absolute; left:calc(50vw - min(45vw, 45vh)); top:min(30vh,30vw);\">\n                        <h1 class=\"teachingMoves\">Current Teaching Move</h1>\n                        <div class = \"blueLight\" style=\"opacity: {(!exploitSelect)?\"0\":\"1\"};\"></div>\n                        <div class=\"greyBox\" id={`box1: ${counter}`} in:migrateLeftExploit={{replaceExploit:replaceExploit}} out:migrateOut={{ replaceExploit: replaceExploit}}>\n                            <div style=\"top:0px; position: absolute\">\n                                {#if !clearBoard}\n                                    <RedGreen numberGreen={exploitMu}/>\n                                {:else}\n                                    <RedGreen numberGreen={0} clearBoard={true}/>\n                                {/if}\n                            </div>\n                        </div>\n                        {#if keyView}\n                            <div class = \"arrowCover\">\n                                <h2 class = \"arrowKey\">Left Arrow</h2>\n                            </div>\n                        {/if}\n                    </div>\n                    {:else}\n                    <div style=\"position: absolute; left:calc(50vw + min(5vw, 5vh)); top:min(30vh,30vw)\">\n                    <h1 class=\"teachingMoves\">New Teaching Move</h1>\n                        <div class=\"greyBox\" id={`box2: ${counter}`} in:migrateLeftExplore={{replaceExploit:replaceExploit}} out:InvisibleOrDown={{replaceExploit:replaceExploit}}>\n                            <div style=\" position: absolute\">\n                                {#if viewExplore}\n                                    <RedGreen numberGreen={exploreMu}/>\n                                {:else}\n                                    <div style=\"width: min(40vh,40vw); height:min(40vh,40vw); text-align: center; font-size: min(20vh,20vw); top: min(5vh,5vw); position:absolute\">?</div>\n                                {/if}\n                            </div>\n                        </div>\n                    <div class=\"blueLight\" style=\"opacity: {(!exploreSelect)?\"0\":\"1\"};\"></div>\n                {#if keyView}\n                    <div class =\"arrowCover\">\n                        <h2 class = \"arrowKey\">Right Arrow</h2>\n                    </div>\n                {/if}\n                </div>\n                {/if}\n            {/if}\n        {/each}\n    {/key}\n{/if}","<svelte:window on:keydown={handleKeydown}/>\n<script>\n    export let breakTruth={truth:false}\n    export let nextInstruction=null\n    export let nextArrow\n    async function timer(time){\n        return await new Promise(r => setTimeout(r, time));\n    }\n    async function handleKeydown(event){\n        if (!breakTruth.truth){\n                if (event.key === nextArrow){\n                    console.log(\"hi\")\n                    nextInstruction()\n                }\n        }\n    }\n</script>\n","<script>\n    export let lastGreenBar=0\n    export let lastRedBar=0\n    export let greenBar = 0\n    export let redBar=0\n    export let numTrials=30\n</script>\n<style>\n    .progressBar {\n    width:min(61vh,61vw);\n    height:min(5vh,5vw);\n    background-color:white;\n    position:absolute;\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    border: solid min(.4vh,.4vw) black\n}\n.progressLeft {\n    top:min(.5vh,.5vw);\n    height:min(4vh,4vw);\n    background-color: green;\n    -webkit-animation: flashGreen .5s infinite;  /* Safari 4+ */\n    -moz-animation: flashGreen .5s infinite;  /* Fx 5+ */\n    -o-animation: flashGreen .5s infinite;  /* Opera 12+ */\n    animation: flashGreen .5s infinite;  /* IE 10+, Fx 29+ */\n}\n.progressRight {\n    top:min(.5vh,.5vw);\n    height:min(4vh,4vw);\n    transform:translate(-100%);\n    background-color: red;\n    -webkit-animation: flashRed .5s infinite;  /* Safari 4+ */\n    -moz-animation: flashRed .5s infinite;  /* Fx 5+ */\n    -o-animation: flashRed .5s infinite;  /* Opera 12+ */\n    animation: flashRed .5s infinite;  /* IE 10+, Fx 29+ */\n}\n.classUnderstanding {\n    position: absolute; \n    top:min(40vh,40vw); \n    left:calc(50vw - min(25vw, 25vh)); \n    width:min(50vw, 50vh); \n    height:min(5vw, 5vh); \n    text-align:center; \n    font-size: min(2vw, 2vh);\n    }\n.progressGreen {\n    top:min(.5vh,.5vw);\n    height:min(4vh,4vw);\n    background-color: green;\n}\n.progressRed {\n    transform:translate(-100%);\n    top:min(.5vh,.5vw);\n    height:min(4vh,4vw);\n    background-color: red;\n}\n@keyframes flashGreen {\n    0%, 49%{\n        background-color: green\n    }\n    50%, 100%{\n        background-color:gold\n    }\n}\n@keyframes flashRed {\n    0%, 49%{\n        background-color: red\n    }\n    50%, 100%{\n        background-color:gold\n    }\n}\n</style>\n<h1 class=\"classUnderstanding\">Total Student Understanding</h1>\n<div style = \"left:calc(50vw - min(30vh,30vw)); top:min(50vh,50vw); position:absolute\">\n    <div class=\"progressBar\" style=\"left:max(-.5vw,-.5vh)\"></div>\n    {#key greenBar}\n        <div class = progressGreen style=\"width:calc((min(60vh,60vw) / {numTrials*20}) * {greenBar}); position:absolute\"></div>\n        {#key lastGreenBar}\n            <div class = progressLeft  style=\"width:calc((min(60vh,60vw) / {numTrials*20}) * {lastGreenBar}); left: calc((min(60vh,60vw) / {numTrials*20}) * {greenBar}); position:absolute\"></div>\n        {/key}\n    {/key}\n    {#key redBar}\n        <div class = progressRed style=\"width:calc((min(60vh,60vw) / {numTrials*20}) * {redBar}); left:min(60vh,60vw); position:absolute\"></div>\n        {#key lastRedBar}\n            <div class = progressRight style=\"width:calc((min(60vh,60vw) / {numTrials*20}) * {lastRedBar}); left: calc(min(60vh,60vw) - ((min(60vh,60vw) / {numTrials*20}) * {redBar}) + 1px); position:absolute\"></div>\n        {/key}\n    {/key}\n</div>","<script>\n    export let greenScore = 10\n    export let numTrials= 30\n    export let greenScoreLast=10\n    const redScore = numTrials*20 - greenScore\n    const redScoreLast = numTrials*20 - greenScoreLast\n    let transitionOffBlank=false\n    async function timer(time){\n        return await new Promise(r=>setTimeout(r,time))\n    }\n    async function blankToOn(){\n        await timer(500)\n        transitionOffBlank=true\n    }\n    blankToOn()\n</script>\n<style>\n.progressGreen {\n    top:min(.5vh,.5vw);\n    height:min(4vh,4vw);\n    background-color: green;\n}\n.progressRed {\n    transform:translate(-100%);\n    top:min(.5vh,.5vw);\n    height:min(4vh,4vw);\n    background-color: red;\n}\n.classUnderstanding {\n    position: absolute; \n    top:min(20vh,20vw); \n    left:calc(50vw - min(25vw, 25vh)); \n    width:min(50vw, 50vh); \n    height:min(5vw, 5vh); \n    text-align:center; \n    font-size: min(2vw, 2vh);\n}\n.progressBar {\n    width:min(61vh,61vw);\n    height:min(5vh,5vw);\n    background-color:white;\n    position:absolute;\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    border: solid min(.4vh,.4vw) black\n}\n.description {\n    position: absolute; \n    top:min(48vh,48vw); \n    left:max(5vw,calc((100vw - 150vh)/2));\n    width:min(90vw,150vh);\n    height:min(30vw, 30vh); \n    text-align:center; \n    font-size: min(1.5vw , 1.5vh);\n    }\n.performanceBox {\n    position:absolute;\n    top:min(60vh,60vw); \n    left:max(5vw,calc((100vw - 150vh)/2));\n    width:min(90vw,150vh);\n    font-size: min(1.5vw , 1.5vh);\n    text-align:center; \n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    border: solid min(.4vh,.4vw) black\n}\n\n</style>\n    <h1 class=\"classUnderstanding\">Total Student Understanding This Month</h1>\n    <div style = \"left:calc(50vw - min(30vh,30vw)); top:min(25vh,25vw); position:absolute\">\n        <div class=\"progressBar\" style=\"left:max(-.5vw,-.5vh)\"></div>\n        <div class = progressGreen style=\"width:calc((min(60vh,60vw) / {numTrials*20}) * {greenScore}); position:absolute\"></div>\n        <div class = progressRed style=\"width:calc((min(60vh,60vw) / {numTrials*20}) * {redScore}); left:min(60vh,60vw); position:absolute\"></div>\n    </div>\n    <h1 class=\"classUnderstanding\" style=\"top:min(33vh,33vw)\">Total Student Understanding Last Month</h1>\n    <div style = \"left:calc(50vw - min(30vh,30vw)); top:min(38vh,38vw); position:absolute\">\n        <div class=\"progressBar\" style=\"left:max(-.5vw,-.5vh)\"></div>\n        <div class = progressGreen style=\"width:calc((min(60vh,60vw) / {numTrials*20}) * {greenScoreLast}); position:absolute\"></div>\n        <div class = progressRed style=\"width:calc((min(60vh,60vw) / {numTrials*20}) * {redScoreLast}); left:min(60vh,60vw); position:absolute\"></div>\n    </div>\n<div class=\"description\">\n    <h1> Your classroom's understanding at the end of this month was {Math.round(100*greenScore/(numTrials*20))}%, and\n    your classroom's understanding last month was {Math.round(100*greenScoreLast/(numTrials*20))}%\n    </h1>\n</div> \n<div >\n    <div class =\"performanceBox\">\n    {#if greenScore>greenScoreLast}\n        <h1>Great Job! You improved upon your classroom's understanding from the last month! Let's try and do even better in the next month!</h1>\n    {/if}\n    {#if greenScore<greenScoreLast}\n        <h1>Oh no! It looks like your classroom's understanding dropped from the last month, let's try and beat this score next time!</h1>\n    {/if}\n    {#if greenScore == greenScoreLast}\n            <h1 >Looks like you tied your last score! Let's try and beat that score in the next month!</h1>\n    {/if}\n</div>\n</div>\n","<script>\n    import NavigationButtons from \"./NavigationButtons.svelte\";\n    import SingleChoice from \"./SingleChoice.svelte\"\n    import DoubleChoice from \"./DoubleChoice.svelte\"\n    import FullScreen from \"./FullScreen.svelte\"\n    import PracticeGame from \"./PracticeGame.svelte\"\n    import NavigationArrows from \"./NavigationArrows.svelte\"\n    import ProgressBar from \"./ProgressBar.svelte\"\n    import MonthProgress from  \"./MonthProgress.svelte\"\n    import Game from \"../Game.svelte\"\n    export let toGame\n    export let i=0\n    export let breakTruth = {truth:false}\n    export let getData\n    export let writeKey\n    export let id\n    let animationCounter=0\n    let practiceData=undefined\n    let warmUp=\"\"\n    function nextInstruction(n){\n        console.log(typeof n == \"number\");\n        (!(typeof n == \"number\"))?n=1:n=n\n        console.log(n)\n        i+=n\n    }\n    function previousInstruction(n){\n        (!(typeof n == \"number\"))?n=1:n=n\n        console.log(n)\n        i-=n\n    }\n    function replayAnimation(){\n        console.log(animationCounter)\n        animationCounter+=1\n    }\n    function breakNav(value){\n        breakTruth.truth=value\n        console.log(breakTruth.truth)\n    }\n    async function sendGameUpstream(data){\n        getData(data)\n        //modified\n        //console.log(await Send_Data_To_Exius([{endpoint:\"TeacherCSV\",fname:`Subject_${id}.csv`,data:data}],\"Teacher_Task\",writeKey))\n        i+=1\n    }\n    async function Send_Data_To_Exius(params,templateKey,writeKey){\n    // [{endpoint:Horizon_CSV,data:data,fname:fname}]\n    try{\n        var fd=new FormData()\n        for ( const fileInfo of params){\n            //console.log(fileInfo)\n            let URL = new Blob([fileInfo.data], { type: 'text/csv;charset=utf-8;' });\n            fd.append(fileInfo.endpoint,URL,fileInfo.fname)\n        }\n        let res = await fetch(\"https://exius.nrdlab.org/Upload\",{\n            headers:{authorization:`templateKey:${templateKey};writeKey:${writeKey}`},\n            method:\"POST\",\n            body: fd})\n        return await res.json()}\n    catch(e){\n        console.log(e)\n        throw e\n    }}\n   $: {if (i === 4){\n        console.log(\"Sending Response...\")\n        //modified\n        //Send_Data_To_Exius([{endpoint:\"TeacherResponse\",fname:`Response_${id}.txt`,data:warmUp}],\"Teacher_Task\",writeKey)\n    }}\n    $: {if (i === 25){\n        iterate_i()\n    }\n    }\n    async function timer(time){\n        return await new Promise(r => setTimeout(r, time));\n    }\n    async function iterate_i(){\n        await timer(3000)\n        i+=1\n    }\n</script>\n<style>\n    .descriptionText{\n        text-align:center;\n        font-size:min(3vh,3vw);\n        left:max(5vw,calc((100vw - 180vh)/2));\n        width:min(90vw,180vh);\n        position:absolute;\n    }\n    .titleText{\n        font-size:min(18vh,18vw);\n        text-align:center;\n        position:absolute;\n        width:100vw\n    }\n    .textBox{\n        top: min(20vh,20vw);\n        left:calc(50vw - min(25vw,25vh)); \n        width:min(50vw,50vh); \n        height:min(40vw,40vh); \n        font-size: min(3vw,3vh); \n        position: absolute\n    }\n    .imageBox{\n        position: absolute; \n        top: min(20vw,20vh); \n        left: calc(50vw - min(40vh,40vw)); \n        width: min(80vh,80vw); \n        height: min(50vw,50vh); \n        box-sizing: border-box;\n        -moz-box-sizing: border-box;\n        -webkit-box-sizing: border-box;\n        border: solid black;    \n    }\n    .imageScale{\n        position: absolute;\n        left: calc(50vw - min(35vh,35vw)); \n        width: min(70vh,70vw);\n        height: min(40vw,40vh);\n        top: min(28vw,28vh); \n    }\n    .imageText{\n        position:absolute;\n        text-align:center;\n        font-size:min(3vh,3vw);\n        width: min(80vh,80vw); \n        top: min(20vw,20vh); \n        left: calc(50vw - min(40vh,40vw)); \n    }\n    .redGreenBall{\n        position:absolute;\n        text-align:center;\n        font-size:min(5vh,5vw);\n        left: calc(50vw - min(38vh,38vw));\n        width:min(12vh,12vw);\n        height:min(12vh,12vw);\n        border-radius: 50%;\n    }\n    .understandBox{\n        position:absolute;\n        box-sizing: border-box;\n        -moz-box-sizing: border-box;\n        -webkit-box-sizing: border-box;\n        border: solid black;  \n        width: min(50vh,50vw);\n        height: min(10vw,10vh);\n        left: calc(50vw - min(23vh,23vw));\n        font-size: min(2.8vh,2.8vw);\n        padding:min(1.2vh,1.2vw);\n    }\n    .points {\n        position: absolute;\n        top:min(40vh,40vw); \n        left:calc(50vw + min(30vw, 30vh)); \n        width: min(20vw, 20vh); \n        height:min(5vw, 5vh); \n        text-align:center; \n        box-sizing: border-box;\n        -moz-box-sizing: border-box;\n        -webkit-box-sizing: border-box;\n        border: solid black min(.4vh,.4vw);\n        font-size: min(2vw, 2vh);\n    }\n</style>\n{#if i===0}\n    <FullScreen nextInstruction={nextInstruction}/>\n{/if}\n{#if i===1}\n    <h1 class=\"titleText\">The <br/>Teaching Task</h1>\n    <h1 style=\"top:70vh;width:min(60vw,60vh);left:calc(50vw - min(20vw,20vh));position:absolute;font-size:min(3vh,3vw);\"> Click Next to Start the Task</h1>\n    <NavigationButtons nextInstruction={nextInstruction}/>\n{/if}\n{#if i ===2}\n    <h1 class=\"descriptionText\">\n        For this experiment, you will play a teaching task.  Please read through these instructions carefully.\n         Remember that this is an important part of our study. Please give this task adequate time and effort, and try to get the best results.  \n        </h1>\n        <NavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i ===3}\n<h1 class=\"descriptionText\">\n    To start off, we want you to take a moment to think about and describe your current math warm up in 1 or 2 sentences.\n    </h1>\n    <textarea bind:value={warmUp} rows=4 wrap=\"soft\" placeholder=\"Input description here...\" class= \"textBox\"></textarea>\n    <NavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i ===4}\n<h1 class=\"descriptionText\">\n    Now, we want you to imagine that your math coach or colleague has suggested a new approach for your math warm up. \n</h1>\n<NavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i ===5}\n<h1 class=\"descriptionText\">\n    In this experiment  - the teaching task - we would like you to choose between two teaching approaches for your math warm up, (1) your current math warm up that seems to be working well or (2) the “new” suggested approach for your math warm up. </h1>\n    <NavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i ===6}\n    <h1 class=\"descriptionText\">\n        For the purposes of this task, we will keep the teaching approaches generic (“current” approach or “new” approach by the coach) but we want you to imagine what those approaches might be (i.e. starting with a group problem, a quick review worksheet, calendar time, or a math discussion).\n    </h1>\n    <NavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i ===7}\n    <h1 class=\"descriptionText\">\n        To get feedback on how well the approach worked, your students will display a red light or green light to show their understanding.  \n    </h1>\n    <div class =\"imageBox\"></div>\n    <h1 class = \"imageText\">How much did you understand?</h1>\n    <img class=\"imageScale\" src=\"https://cdn.vox-cdn.com/thumbor/8XjPCHo_W0zCH1YDoR3ST3cN51E=/0x0:6720x4480/920x613/filters:focal(2823x1703:3897x2777)/cdn.vox-cdn.com/uploads/chorus_image/image/64906829/f9c5667541.0.jpeg\" alt=\"temp\">\n    <NavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i ===8}\n    <h1 class=\"descriptionText\">\n        The response of a student holding up a red or green card after being asked might be like:\n    </h1>\n    <div class=\"imageBox\"></div>\n    <h1 class = \"imageText\">How much did you understand?</h1>\n        <div class=\"redGreenBall\" style=\"background-color:red;top:min(31vh,31vw)\">\n            <h1 style=\"top:50%;left50%;height:20%;width:20%;margin:0% 25%\">R</h1>\n        </div>\n        <div class=\"redGreenBall\" style=\"background-color:green; top:min(51vh,51vw)\"> \n            <h1 style=\"top:50%;left50%;height:20%;width:20%;margin:2% 20%\">G</h1>\n        </div>\n        <h1 class=\"understandBox\" style=\"top:min(30vh,30vw)\">\n            I do not get it! This did not help me.\n        </h1>\n        <h1 class=\"understandBox\" style=\"top:min(50vh,50vw)\">I understand!\n            I am happy with how this went.            \n        </h1>\n    <NavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i ===9}\n    <SingleChoice passedText=\"You have a class of 20 students. Each student is represented by a circle. A teaching approach, or move, can have different outcomes day to day. On the first day you try it, you might get 12 students showing green and 8 showing red (shown below)\" exploitSelect={false} exploitMu={12}/>\n    <NavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i ===10}\n    <SingleChoice passedText=\"And the second day you try the same move it might not work so well - 9 students showing green and 11 showing red.\" exploitSelect={false} exploitMu={9}/>\n    <NavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i ===11}\n    <SingleChoice passedText=\"And on the next day you might try the same move and get slightly better results - 15 students showing green and 5 showing red. As you can see, the same move can get slightly better or worse results over time but stays fairly close to what it was the day before.\" exploitSelect={false} exploitMu={15}/>\n    <NavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i === 12}\n    <h1 class=\"descriptionText\">When you play the task, the two teaching approaches will be represented like this.  \n        Your current approach shows the outcome from the last time you used that approach.\n        The outcome from your new approach is unknown until you try it.\n    </h1>\n    <DoubleChoice exploitMu={11}/>\n    <NavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i ===13}\n    <h1 class=\"descriptionText\">If you choose to continue with your current teaching approach, it will light up with a blue border and a new outcome will appear.  \n    </h1>\n    <NavigationButtons breakTruth={breakTruth} nextInstruction={nextInstruction} previousInstruction={previousInstruction} replayAnimation={replayAnimation}/>\n    {#key animationCounter}\n        <DoubleChoice breakNav={breakNav} delayExploit={true} exploitMu={11}/>\n    {/key}\n{/if}\n{#if i ===14}\n<h1 class=\"descriptionText\">Or if you choose to switch to the new approach, it will light up and show the results like this…\n</h1>\n<NavigationButtons breakTruth={breakTruth} nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n<DoubleChoice breakNav={breakNav} exploreSelect={true} viewExplore={true} exploitMu={11}/>\n{/if}\n{#if i === 15}\n    <h1 class=\"descriptionText\">If the new approach is worse than the current approach, you earn fewer points on the trial. Then, since it is worse, this new approach is discarded.\n    </h1>\n    <NavigationButtons breakTruth={breakTruth} nextInstruction={nextInstruction} previousInstruction={previousInstruction} replayAnimation={replayAnimation}/>\n    {#key animationCounter}\n        <DoubleChoice breakNav={breakNav} delayBadExplore={true} exploitMu={11} noReplaceExplore={true}/>\n    {/key}\n{/if}\n{#if i === 16}\n    <h1 class=\"descriptionText\">Then another new approach will appear. Now you can choose again from the current approach or another new approach.\n    </h1>\n    <NavigationButtons breakTruth={breakTruth} nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n    <DoubleChoice breakNav={breakNav} exploitMu={11}/>\n{/if}\n{#if i === 17}\n    <h1 class=\"descriptionText\">If you were to try the new approach and it is better than the current approach,  it will replace your current approach for your next choice. \n    </h1>\n    <NavigationButtons breakTruth={breakTruth} nextInstruction={nextInstruction} previousInstruction={previousInstruction} replayAnimation={replayAnimation}/>\n    {#key animationCounter}\n        <DoubleChoice breakNav={breakNav} delayGoodExplore={true} exploitMu={11} exploreMu={16} noReplaceExplore={true}/>\n    {/key}\n{/if}\n{#if i === 18}\n    <h1 class=\"descriptionText\">Once again, another new approach will appear... and so on...\n    </h1>\n    <NavigationButtons breakTruth={breakTruth} nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n    <DoubleChoice breakNav={breakNav} exploitMu={16}/>\n{/if}\n{#if i === 19}\n    <h1 class=\"descriptionText\">To recap, you need to choose between you current approach and a new approach.  Choosing you current approach gives you a similar result to what you got last time (slightly better or worse).  Choosing a new approach give you a totally new outcome(that can be a lot better or a lot worse).\n    </h1>\n    <NavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i === 20}\n    <h1 class=\"descriptionText\">Before you begin, to make sure you've got everything, we will walk you through several trials...\n    </h1>\n    <NavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i === 21}\n    <h1 class=\"descriptionText\">For our first trial we have a current teaching approach that seems to be working fairly well, so we may want to stick with our current approach (press the left arrow)</h1>\n    <DoubleChoice breakNav={breakNav} exploitMu={12} keyDisplay={true}/>\n    <NavigationArrows breakTruth={breakTruth} nextInstruction={nextInstruction} nextArrow={\"ArrowLeft\"}/>\n{/if}\n{#if i=== 22}\n    <h1 class=\"descriptionText\">We can see that when we tried our current teaching approach it got better! So, we may want to keep trying that approach (press the left arrow)</h1>\n    <DoubleChoice breakNav={breakNav} keyDisplay={true} delayExploit={true} exploitMu={12} exploitMu2={13} delayTime={0}/>\n    <NavigationArrows breakTruth={breakTruth} nextInstruction={nextInstruction} nextArrow={\"ArrowLeft\"}/>\n{/if}\n{#if i=== 23}\n    <h1 class=\"descriptionText\">Oh no! We seem to have gotten a bad outcome that time. Since our current choice is not performing well we may want to switch to a new approach (press the right arrow)</h1>\n    <DoubleChoice breakNav={breakNav} keyDisplay={true} delayExploit={true} exploitMu={13} exploitMu2={8} delayTime={0}/>\n    <NavigationArrows breakTruth={breakTruth} nextInstruction={nextInstruction} nextArrow={\"ArrowRight\"}/>\n{/if}\n{#if i=== 24}\n    <h1 class=\"descriptionText\">After trying the new approach, we got a worse outcome than our current approach. We may still think that there are better options out there though, and we decide to try another new approach (press the right arrow)</h1>\n    <DoubleChoice breakNav={breakNav} keyDisplay={true} delayBadExplore={true} exploitMu={8} exploreMu={1} delayTime={0}/>\n    <NavigationArrows breakTruth={breakTruth} nextInstruction={nextInstruction} nextArrow={\"ArrowRight\"}/>\n{/if}\n{#if i=== 25}\n    <h1 class=\"descriptionText\">Great! We seem to have found a much better approach when we tried another new approach. Now it is your turn to try a couple of trials by yourself. Choose either the left or right arrow to make your decision.</h1>\n    <DoubleChoice breakNav={breakNav} keyDisplay={true} delayGoodExplore={true} exploitMu={8} exploreMu={15} delayTime={0}/>\n{/if}\n{#if i === 26}\n<PracticeGame breakTruth={breakTruth} toNext={nextInstruction} trialDescriptions={[\n    \"Great! We seem to have found a much better approach when we tried another new approach. Now it is your turn to try a couple of trials by yourself. Choose either the left or right arrow to make your decision.\",\n    \"Lets try another, 3 practice trials left\",\n    \"Lets try another, 2 practice trials left\",\n    \"Lets try another, 1 practice trials left\",\n    \"\"\n]}/> \n{/if}\n{#if i ===27}\n    <h1 class=\"descriptionText\"> The game will be organized into days and months, and the current day/month will be displayed at the top of your screen.\n         Every time you choose either your current teaching move or a new teaching move, it will increase your day count. At the end of 30 days, a new month\n        will happen. Here is the display you would see if you were currently on day 5 of the second month.</h1>\n    <h1 class =\"points\">Day {5} of {30}</h1>\n    <h1 class =\"points\" style=\"left:calc(50vw - min(50vw, 50vh));\">Month {2} of {6}</h1>\n    <NavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction} backSkip={7}/>\n{/if}\n{#if i ===28}\n    <h1 class=\"descriptionText\">Your points will be kept track of with a progress bar at the top of your screen. The total bar length represents your total accumulated red and green lights this month. The flashing sections\n        represent the red and green lights that you recieved on your last choice. </h1>\n    <ProgressBar lastGreenBar={15} lastRedBar={5} greenBar = {250} redBar={210} numTrials={30}/>\n    <NavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i === 29}\n    <h1 class=\"descriptionText\">So, all together, the top of your screen will look something like:</h1>\n    <h1 class =\"points\">Day {23} of {30}</h1>\n    <h1 class =\"points\" style=\"left:calc(50vw - min(50vw, 50vh));\">Month {2} of {6}</h1>\n    <ProgressBar lastGreenBar={15} lastRedBar={5} greenBar = {250} redBar={210} numTrials={30}/>\n    <NavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i ===30}\n<h1 class=\"descriptionText\">At the end of each month, you will be shown a screen giving your performance that month and the month before. This gives you a chance to \n    improve upon your score between months! If you improved upon your previous, you would see something like:\n</h1>\n    <MonthProgress greenScore={380} greenScoreLast={300} numTrials={30}/>\n    <NavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i === 31}\n    <h1 class=\"descriptionText\">Now that you've seen all the parts of the game, lets have you do a couple of rounds by yourself. The classroom understanding bar will be added into these trials.\n    </h1>\n    <NavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i === 32}\n    <Game toNext={sendGameUpstream} gameString={\"\"} writeKey={writeKey} id={id} totalBlocks={0} block={0} numTrials={10}/>\n{/if}\n{#if i === 33}\n    <h1 class=\"descriptionText\">At this point you should have a firm understanding of the task. This task will go for 6 months of 30 days each. Remember to maximize your students' understanding, and good luck! To review any of the instructions click back, to continue to the task click next.\n    </h1>\n    <NavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction} backSkip={2}/>\n{/if}\n{#if i === 34}\n    {toGame()}\n{/if}\n","<script>\n    export let breakTruth={truth:false}\n    export let nextInstruction=null\n    export let previousInstruction=null\n    export let replayAnimation=null\n    export let backSkip =1\n    export let forwardSkip =1\n    export let display = true\n</script>\n<style>\n    .buttonCover{\n    position:absolute; \n    top:0; \n    width:5vw; \n    height: 100%; \n    text-align: center; \n    border: solid black min(.4vw,.4vh);\n    font-size: min(2vh,2vw);\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    text-align: center;\n    }\n    .buttonCover:hover{\n    box-shadow: 0 0 min(2vh,2vw) rgb(160, 160, 221);\n    cursor: pointer;\n    }\n</style>\n{#if !breakTruth.truth && display}\n    {#if nextInstruction && previousInstruction}\n        <button class=\"buttonCover\" style=\"left:0vw\" on:click={previousInstruction(backSkip)}>Back</button>\n        <button class=\"buttonCover\" style = \"left:95vw\" on:click={nextInstruction(forwardSkip)}>Next</button>\n        {#if replayAnimation}\n            <button class=\"buttonCover\" style = \"left:calc(50vw - 10vw);top:80vh;height:5vh;width:20vw\" on:click={replayAnimation()}>Replay Animation</button>\n        {/if}\n    {:else if nextInstruction}\n        <button class = \"buttonCover\" style = \"left:95vw\" on:click={nextInstruction(forwardSkip)}>Next</button>\n    {:else}\n        <button class = \"buttonCover\" style = \"left:0vw\" on:click={previousInstruction(backSkip)}>Back</button>\n    {/if}\n{/if}","<script>\n    import RedGreen from \"../RedGreen.svelte\"\n    export let breakNav\n    export let counter=0\n    export const viewNumber=2\n    let range=[...Array(viewNumber).keys()]\n    export let delayGoodExplore=false\n    export let delayBadExplore=false\n    export let delayExploit = false\n    export let viewExplore=false\n    export let exploitMu=12\n    export let exploreMu=5\n    export let exploitMu2=14\n    export let exploreSelect =false\n    export let exploitSelect =false\n    export let replaceExploit={truth:true}\n    export let clearBoard=false\n    export let bothInvisible={truth:true}\n    export let keyDisplay = false\n    export let noReplaceExplore=false\n    export let pointCounter=false\n    export let points=14\n    export let delayTime=1000\n    export let nextButton = null\n    export let nextInstruction = null\n    let invisibleExplore=false\n    let keyView=keyDisplay\n    let pressed = false\n    if (delayGoodExplore){\n        delayedGoodExplore()\n    }\n    if (delayBadExplore){\n        delayedBadExplore()\n    }\n    if (delayExploit){\n        delayedExploit()\n    }\nfunction handleButton(side){\n    if (nextButton == side && !pressed){\n        pressed = true\n        nextInstruction()\n    }\n}\nfunction migrateLeftExplore(node,{delay=0,duration=500}){\n        if (bothInvisible.truth){\n            return {\n                delay:0,\n                duration:0\n            }\n        }\n            return {\n                delay,\n                duration,\n                css: (t,u)=> `transform: translateX(calc(${100*u}vw)) `\n            }\n}\nfunction migrateLeftExploit(node,{replaceExploit,delay=0,duration=500}){\n    if (bothInvisible.truth){\n            return {\n                 delay:0,\n                duration:0}\n        }\n        if (replaceExploit.truth){\n            return {\n                delay,\n                duration,\n                css: (t,u)=> `transform: translateX(min(${50*u}vw,${50*u}vh)) `\n            }\n        }\n        else{\n            return {}\n        }\n}\n    function migrateOut(node,{replaceExploit,delay=0,duration=500}){\n        if (bothInvisible.truth){\n            return { \n                delay:0,\n                duration:0}\n        }\n        if (replaceExploit.truth){\n            return {\n                delay,\n                duration,\n                css: (t,u)=> `transform: translateX(calc(${-100*u}vw)) `\n        }\n        }\n        else{\n            return {}\n        }\n       }\n    function InvisibleOrDown(node,{replaceExploit,delay=0,duration=500}){\n        if (bothInvisible.truth){\n            return {\n                delay:0,\n                duration:0\n            }\n        }\n        if (! replaceExploit.truth){\n            return {\n            delay,\n            duration,\n            css: (t,u)=> `transform: translateY(calc(${100*u}vh)) `\n        }}\n        else{\n            return {\n            css: ()=> `visibility: hidden;display: none;`\n        }\n        }\n    }\n    async function timer(time){\n        return await new Promise(r => setTimeout(r, time));\n    }\n\n    async function delayedGoodExplore(){\n        if (keyDisplay) keyView=false\n        breakNav(true)\n        await timer(delayTime)\n        bothInvisible={truth:false}\n        viewExplore=true\n        exploreSelect=true\n        await timer(500)\n        exploreSelect=false\n        await timer(1000)\n        exploitMu=exploreMu\n        viewExplore=false\n        replaceExploit.truth=true\n        counter+=1\n        if (noReplaceExplore) invisibleExplore=true\n        await timer(500)\n        breakNav(false)\n        if (keyDisplay) keyView=true\n        bothInvisible={truth:true}\n    }\n    async function delayedBadExplore(){\n        if (keyDisplay) keyView=false\n        breakNav(true)\n        await timer(delayTime)\n        bothInvisible={truth:false}\n        viewExplore=true\n        exploreSelect=true\n        await timer(500)\n        exploreSelect=false\n        await timer(1000)\n        viewExplore=false\n        replaceExploit.truth=false\n        counter+=1\n        if (noReplaceExplore) invisibleExplore=true\n        await timer(500)\n        breakNav(false)\n        if (keyDisplay) keyView=true\n        bothInvisible={truth:true}\n    }\n    async function delayedExploit(){\n        if (keyDisplay) keyView=false\n        breakNav(true)\n        await timer(delayTime)\n        exploitSelect=true\n        bothInvisible={truth:false}\n        await timer(500)\n        clearBoard=true\n        exploitSelect=false\n        await timer(1000)\n        clearBoard=false\n        exploitMu=exploitMu2\n        counter+=1\n        breakNav(false)\n        if (keyDisplay) keyView=true\n        bothInvisible={truth:true}\n    }\n    </script>\n<style>\n.greyBox {\n    width:min(40vw, 40vh); \n    height:min(40vw, 40vh); \n    position: absolute;\n    background-color: rgb(207, 202, 202);\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    border: solid black min(.4vh,.4vw);\n}\n.teachingMoves {\n    top:max(-10vh, -10vw); \n    left:max(-5vh,-5vw) ;\n    width: min(50vw,50vh); \n    height:min(5vh,5vw); \n    position: absolute; \n    text-align:center; \n    font-size: min(3vh,3vw)\n}\n.blueLight {\n    width:min(45vh,45vw); \n    height:min(45vh,45vw); \n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    border: solid blue 5px;\n    top: max(-2.5vh,-2.5vw); \n    left: max(-2.5vw,-2.5vh); \n    position: absolute;\n}\n\n</style>\n{#key counter}\n    {#if pointCounter}\n        <h1 style=\"position: absolute; top:0vh; left:calc(50vw + -400px); width:800px; height:50px; text-align:center; border:solid black 2px\">Current Classroom Understanding: {Math.round(points/20*100)}%</h1>\n    {/if}\n    {#each range as i}\n        {#if i==0}\n            <div style=\" position: absolute; left:calc(50vw - min(45vw, 45vh)); top:min(30vh,30vw);\">\n            <h1 class=\"teachingMoves\">Current Teaching Move</h1>\n            <div class = \"blueLight\" style=\"opacity: {(!exploitSelect)?\"0\":\"1\"};\"></div>\n                <button class=\"greyBox\" id={`box1: ${counter}`} in:migrateLeftExploit={{replaceExploit:replaceExploit}} out:migrateOut={{ replaceExploit: replaceExploit}} on:click={()=>{handleButton(\"left\")}}>\n                    <div style=\"top:0px; position: absolute; left:-.1vw\">\n                        {#if !clearBoard}\n                            <RedGreen numberGreen={exploitMu}/>\n                        {:else}\n                            <RedGreen numberGreen={0} clearBoard={true}/>\n                        {/if}\n                    </div>\n                </button>\n            </div>\n            {:else}\n            <div style=\" position: absolute; left:calc(50vw + min(5vw, 5vh)); top:min(30vh,30vw)\">\n            <h1 class=\"teachingMoves\">New Teaching Move</h1>\n            <div class=\"blueLight\" style=\"opacity: {(!exploreSelect)?\"0\":\"1\"};\"></div>\n            <button class=\"greyBox\" id={`box2: ${counter}`} in:migrateLeftExplore={{replaceExploit:replaceExploit}} out:InvisibleOrDown={{replaceExploit:replaceExploit}} on:click={()=>{handleButton(\"right\")}}>\n                <div style=\"top: 0px; position: absolute; left:-.1vw\">\n                    {#if viewExplore}\n                        <RedGreen numberGreen={exploreMu}/>\n                    {:else}\n                        <div style=\"width: min(40vh,40vw); height:min(40vh,40vw); text-align: center; font-size: min(20vh,20vw); top: min(5vh,5vw); position:absolute\">?</div>\n                    {/if}\n                </div>\n            </button>\n        </div>\n        {/if}\n    {/each}\n{/key}","<script>\n    import RedGreen from \"../RedGreen.svelte\"\n    export let counter=0\n    export const viewNumber=2\n    export let gameString=\"\"\n    let trialSd = 3\n    let numTrials =4\n    let trial = 1\n    let range=[...Array(viewNumber).keys()]\n    let trialStartTime=Date.now()\n    let viewExplore=false\n    let exploitMu=15\n    let exploreMu=random_int()\n    let exploreSelect =false\n    let exploitSelect =false\n    let replaceExploit={truth:false}\n    let keyView=true\n    let clearBoard=false\n    let currentUnderstanding=exploitMu\n    let lastGreenBar=0\n    let lastRedBar=0\n    let greenBar = 0\n    let redBar=0\n    export let trialDescriptions=[]\n    export let toNext\n    export let bothInvisible=true\n    export let breakTruth = {truth:false}\n    function migrateLeftExplore(node,{delay=0,duration=500}){\n        if (bothInvisible){\n            return {\n                 delay:0,\n                duration:0}\n        }\n        console.log(`migrateLeftExplore:${true}`)\n            return {\n                delay,\n                duration,\n                css: (t,u)=> `transform: translateX(calc(${100*u}vw)) `\n            }\n    }\n    function migrateLeftExploit(node,{replaceExploit,delay=0,duration=500}){\n        if (bothInvisible){\n                return {\n                    delay:0,\n                    duration:0}\n            }\n    console.log(`migrateLeftExploit:${replaceExploit}`)\n        if (replaceExploit.truth){\n            return {\n                delay,\n                duration,\n                css: (t,u)=> `transform: translateX(min(${50*u}vw,${50*u}vh)) `\n            }\n        }\n        else{\n            return {}\n        }\n}\n    function migrateOut(node,{replaceExploit,delay=0,duration=500}){\n        if (bothInvisible){\n            return {\n                 delay:0,\n                duration:0}\n        }\n        console.log(`migrateOut:${replaceExploit}`)\n        if (replaceExploit.truth){\n            return {\n                delay,\n                duration,\n                css: (t,u)=> `transform: translateX(calc(${-100*u}vw)) `\n        }\n        }\n        else{\n            return {}\n        }\n       }\n    function InvisibleOrDown(node,{replaceExploit,delay=0,duration=500}){\n        if (bothInvisible){\n            return {\n                 delay:0,\n                duration:0}\n        }\n        console.log(`invisibleOrDown:${replaceExploit}`)\n        if (! replaceExploit.truth){\n            return {\n            delay,\n            duration,\n            css: (t,u)=> `transform: translateY(calc(${100*u}vh)) `\n        }}\n        else{\n            return {\n            css: ()=> `visibility: hidden;display: none;`\n        }\n        }\n    }\n    async function timer(time){\n        return await new Promise(r => setTimeout(r, time));\n    }\n    async function Send_Data_To_Exius(params,templateKey,writeKey){\n    // [{endpoint:Horizon_CSV,data:data,fname:fname}]\n    try{\n        var fd=new FormData()\n        for ( const fileInfo of params){\n            let URL = new Blob([fileInfo.data], { type: 'text/csv;charset=utf-8;' });\n            fd.append(fileInfo.endpoint,URL,fileInfo.fname)\n        }\n        let res = await fetch(\"https://exius.nrdlab.org/Upload\",{\n            headers:{authorization:`templateKey:${templateKey};writeKey:${writeKey}`},\n            method:\"POST\",\n            body: fd})\n        return await res.json()}\n    catch(e){\n        throw e\n    }}\n    async function handleButton(side){\n        if (keyView==false){\n            return\n        }\n            console.log(side)\n            let singleTrialData={trial:trial.toString(),previousExploit:exploitMu,keyPressTime:Date.now(),trialStartTime:trialStartTime}\n            bothInvisible=false\n            if(side == \"left\"){\n                greenBar+=lastGreenBar\n                redBar+=lastRedBar\n                lastGreenBar=0\n                lastRedBar=0\n                keyView=false\n                let newDist=sample_normal_to_twenty()\n                exploitSelect=true\n                await timer(500)\n                exploitSelect=false\n                clearBoard=true\n                await timer(1000)\n                exploitMu=newDist\n                lastGreenBar=newDist\n                lastRedBar=20-newDist\n                clearBoard=false\n                keyView=true\n                trialStartTime = Date.now()\n                currentUnderstanding=newDist\n                trial+=1\n                console.log(\"done\")\n        }\n        if(side==\"right\"){\n            viewExplore=true\n            let newDist=random_int(20)\n            greenBar+=lastGreenBar\n            redBar+=lastRedBar\n            lastGreenBar = 0\n            lastRedBar = 0\n            if (newDist > exploitMu){\n                console.log(\"greater than\")\n                keyView=false\n                exploreMu=newDist\n                exploreSelect=true\n                await timer(500)\n                exploreSelect=false\n                await timer(500)\n                exploitMu=newDist\n                viewExplore=false\n                replaceExploit.truth=true\n                counter+=1\n                await timer(500)\n                lastGreenBar=newDist\n                lastRedBar=20-newDist\n                keyView = true\n                trialStartTime=Date.now()\n                currentUnderstanding=newDist\n                trial+=1\n            }\n        else{\n            console.log(\"less than\")\n            keyView=false\n            exploreMu=newDist\n            exploreSelect=true\n            await timer(500)\n            exploreSelect=false\n            await timer(500)\n            viewExplore=false\n            replaceExploit.truth=false\n            counter+=1\n            await timer(500)\n            lastGreenBar=newDist\n            lastRedBar=20-newDist\n            keyView = true\n            trialStartTime=Date.now()  \n            currentUnderstanding=newDist\n            trial+=1\n            }\n        }\n        if (trial === numTrials+1){\n            bothInvisible = true\n        }\n        else{\n            bothInvisible=false\n        }\n        if (trial === numTrials+1){\n            keyView = false\n            await timer(1200)\n            toNext(gameString,greenBar+lastGreenBar)\n        }\n    }\n    function box_mueller() {\n    // all credit to stack exhange\n        var u = 0, v = 0;\n        while(u === 0) u = Math.random(); \n        while(v === 0) v = Math.random();\n        return Math.sqrt( -2.0 * Math.log( u ) ) * Math.cos( 2.0 * Math.PI * v );\n}\n    function sample_normal(mu,sd){\n        return sd*box_mueller()+mu\n    }\n    function sample_normal_to_twenty(){\n        let newNorm=Math.floor(sample_normal(exploitMu,trialSd))\n        newNorm=Math.min(newNorm,20)\n        newNorm=Math.max(newNorm,0)\n        return newNorm\n    }\n    function random_int(){\n        return Math.floor(20*Math.random())\n    }\n    //in:migrateLeft out:migrateOut\n</script>\n<style>\n.greyBox {\n    width:min(40vw, 40vh); \n    height:min(40vw, 40vh); \n    position: absolute;\n    background-color: rgb(207, 202, 202);\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    border: solid black min(.4vh,.4vw);\n}\n.teachingMoves {\n    top:max(-10vh, -10vw); \n    left:max(-5vh,-5vw) ;\n    width: min(50vw,50vh); \n    height:min(5vh,5vw); \n    position: absolute; \n    text-align:center; \n    font-size: min(3vh,3vw)\n}\n.blueLight {\n    width:min(45vh,45vw); \n    height:min(45vh,45vw); \n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    border: solid blue 5px;\n    top: max(-2.5vh,-2.5vw); \n    left: max(-2.5vw,-2.5vh); \n    position: absolute;\n}\n.descriptionText{\n        text-align:center;\n        font-size:min(3vh,3vw);\n        left:8vw;\n        width:84vw;\n        position:absolute;\n    }\n</style>\n{#if !breakTruth.truth}\n    {#key trial}\n        <h1 class=\"descriptionText\">{trialDescriptions[trial-1]}</h1>\n    {/key}\n    {#key counter}\n        {#each range as i}\n            {#if counter<numTrials+1}\n                {#if i==0}\n                    <div style=\" position: absolute; left:calc(50vw - min(45vw, 45vh)); top:min(30vh,30vw);\">\n                        <h1 class=\"teachingMoves\">Current Teaching Move</h1>\n                            <div class = \"blueLight\" style=\"opacity: {(!exploitSelect)?\"0\":\"1\"};\"></div>\n                            <button class=\"greyBox\" id={`box1: ${counter}`} in:migrateLeftExploit={{replaceExploit:replaceExploit}} out:migrateOut={{ replaceExploit: replaceExploit}} on:click={()=>{handleButton(\"left\")}}>\n                                <div style=\"top:0px; position: absolute;left:-.1vw\">\n                                    {#if !clearBoard}\n                                        <RedGreen numberGreen={exploitMu}/>\n                                    {:else}\n                                        <RedGreen numberGreen={0} clearBoard={true}/>\n                                    {/if}\n                                </div>\n                            </button>                    \n                        </div>\n                    {:else}\n                        <div style=\"position: absolute; left:calc(50vw + min(5vw, 5vh)); top:min(30vh,30vw)\">\n                        <h1 class=\"teachingMoves\">New Teaching Move</h1>\n                        <div class=\"blueLight\" style=\"opacity: {(!exploreSelect)?\"0\":\"1\"};\"></div>\n                            <button class=\"greyBox\" id={`box2: ${counter}`} in:migrateLeftExplore={{replaceExploit:replaceExploit}} out:InvisibleOrDown={{replaceExploit:replaceExploit}} on:click={()=>{handleButton(\"right\")}}>\n                                <div style=\"top:0px; position: absolute; left:-.1vw\">\n                                    {#if viewExplore}\n                                        <RedGreen numberGreen={exploreMu}/>\n                                    {:else}\n                                        <div style=\"width: min(40vh,40vw); height:min(40vh,40vw); text-align: center; font-size: min(20vh,20vw); top: min(5vh,5vw); position:absolute\">?</div>\n                                    {/if}\n                                </div>\n                            </button>\n                        </div>\n                {/if}\n            {/if}\n        {/each}\n    {/key}\n{/if}","<script>\n    import MobileNavigationButtons from \"./MobileNavigationButtons.svelte\";\n    import MobileGame from \"../MobileGame.svelte\"\n    import SingleChoice from \"./SingleChoice.svelte\"\n    import MobileDoubleChoice from \"./MobileDoubleChoice.svelte\"\n    import FullScreen from \"./FullScreen.svelte\"\n    import MobilePracticeGame from \"./MobilePracticeGame.svelte\"\n    import NavigationArrows from \"./NavigationArrows.svelte\"\n    import ProgressBar from \"./ProgressBar.svelte\"\n    import MonthProgress from  \"./MonthProgress.svelte\"\n    export let toGame\n    export let i=0\n    export let breakTruth = {truth:false}\n    export let getData\n    export let writeKey\n    export let id\n    let animationCounter=0\n    let practiceData=undefined\n    let warmUp=\"\"\n    function nextInstruction(n){\n        console.log(typeof n == \"number\");\n        (!(typeof n == \"number\"))?n=1:n=n\n        console.log(n)\n        i+=n\n    }\n    function previousInstruction(n){\n        (!(typeof n == \"number\"))?n=1:n=n\n        console.log(n)\n        i-=n\n    }\n    function replayAnimation(){\n        console.log(animationCounter)\n        animationCounter+=1\n    }\n    function breakNav(value){\n        breakTruth.truth=value\n        console.log(breakTruth.truth)\n    }\n    async function sendGameUpstream(data){\n        getData(data)\n        //modified\n        //console.log(await Send_Data_To_Exius([{endpoint:\"TeacherCSV\",fname:`Subject_${id}.csv`,data:data}],\"Teacher_Task\",writeKey))\n        i+=1\n    }\n    async function Send_Data_To_Exius(params,templateKey,writeKey){\n    // [{endpoint:Horizon_CSV,data:data,fname:fname}]\n    try{\n        var fd=new FormData()\n        for ( const fileInfo of params){\n            //console.log(fileInfo)\n            let URL = new Blob([fileInfo.data], { type: 'text/csv;charset=utf-8;' });\n            fd.append(fileInfo.endpoint,URL,fileInfo.fname)\n        }\n        let res = await fetch(\"https://exius.nrdlab.org/Upload\",{\n            headers:{authorization:`templateKey:${templateKey};writeKey:${writeKey}`},\n            method:\"POST\",\n            body: fd})\n        return await res.json()}\n    catch(e){\n        console.log(e)\n        throw e\n    }}\n   $: {if (i === 4){\n        console.log(\"Sending Response...\")\n        //modified\n        //Send_Data_To_Exius([{endpoint:\"TeacherResponse\",fname:`Response_${id}.txt`,data:warmUp}],\"Teacher_Task\",writeKey)\n    }}\n    $: {if (i === 25){\n        iterate_i()\n    }\n    }\n    async function timer(time){\n        return await new Promise(r => setTimeout(r, time));\n    }\n    async function iterate_i(){\n        await timer(3000)\n        i+=1\n    }\n</script>\n<style>\n    .descriptionText{\n        text-align:center;\n        font-size:min(3vh,3vw);\n        left:8vw;\n        width:84vw;\n        position:absolute;\n    }\n    .titleText{\n        font-size:min(18vh,18vw);\n        text-align:center;\n        position:absolute;\n        width:100vw\n    }\n    .textBox{\n        top: min(20vh,20vw);\n        left:calc(50vw - min(25vw,25vh)); \n        width:min(50vw,50vh); \n        height:min(40vw,40vh); \n        font-size: min(3vw,3vh); \n        position: absolute\n    }\n    .imageBox{\n        position: absolute; \n        top: min(20vw,20vh); \n        left: calc(50vw - min(40vh,40vw)); \n        width: min(80vh,80vw); \n        height: min(50vw,50vh); \n        box-sizing: border-box;\n        -moz-box-sizing: border-box;\n        -webkit-box-sizing: border-box;\n        border: solid black;    \n    }\n    .imageScale{\n        position: absolute;\n        left: calc(50vw - min(35vh,35vw)); \n        width: min(70vh,70vw);\n        height: min(40vw,40vh);\n        top: min(28vw,28vh); \n    }\n    .imageText{\n        position:absolute;\n        text-align:center;\n        font-size:min(3vh,3vw);\n        width: min(80vh,80vw); \n        top: min(20vw,20vh); \n        left: calc(50vw - min(40vh,40vw)); \n    }\n    .redGreenBall{\n        position:absolute;\n        text-align:center;\n        font-size:min(5vh,5vw);\n        left: calc(50vw - min(38vh,38vw));\n        width:min(12vh,12vw);\n        height:min(12vh,12vw);\n        border-radius: 50%;\n    }\n    .understandBox{\n        position:absolute;\n        box-sizing: border-box;\n        -moz-box-sizing: border-box;\n        -webkit-box-sizing: border-box;\n        border: solid black;  \n        width: min(50vh,50vw);\n        height: min(10vw,10vh);\n        left: calc(50vw - min(23vh,23vw));\n        font-size: min(2.8vh,2.8vw);\n        padding:min(1.2vh,1.2vw);\n    }\n    .points {\n        position: absolute;\n        top:min(40vh,40vw); \n        left:calc(50vw + min(30vw, 30vh)); \n        width: min(20vw, 20vh); \n        height:min(5vw, 5vh); \n        text-align:center; \n        box-sizing: border-box;\n        -moz-box-sizing: border-box;\n        -webkit-box-sizing: border-box;\n        border: solid black min(.4vh,.4vw);\n        font-size: min(2vw, 2vh);\n    }\n</style>\n{#if i===0}\n    <FullScreen nextInstruction={nextInstruction}/>\n{/if}\n{#if i===1}\n    <h1 class=\"titleText\">The <br/>Teaching Task</h1>\n    <h1 style=\"top:70vh;width:min(60vw,60vh);left:calc(50vw - min(20vw,20vh));position:absolute;font-size:min(3vh,3vw);\"> Click Next to Start the Task</h1>\n    <MobileNavigationButtons nextInstruction={nextInstruction}/>\n{/if}\n{#if i ===2}\n    <h1 class=\"descriptionText\">\n        For this experiment, you will play a teaching task.  Please read through these instructions carefully.\n         Remember that this is an important part of our study. Please give this task adequate time and effort, and try to get the best results.  \n        </h1>\n        <MobileNavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i ===3}\n<h1 class=\"descriptionText\">\n    To start off, we want you to take a moment to think about and describe your current math warm up in 1 or 2 sentences.\n    </h1>\n    <textarea bind:value={warmUp} rows=4 wrap=\"soft\" placeholder=\"Input description here...\" class= \"textBox\"></textarea>\n    <MobileNavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i ===4}\n<h1 class=\"descriptionText\">\n    Now, we want you to imagine that your math coach or colleague has suggested a new approach for your math warm up. \n</h1>\n<MobileNavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i ===5}\n<h1 class=\"descriptionText\">\n    In this experiment  - the teaching task - we would like you to choose between two teaching approaches for your math warm up, (1) your current math warm up that seems to be working well or (2) the “new” suggested approach for your math warm up. </h1>\n    <MobileNavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i ===6}\n    <h1 class=\"descriptionText\">\n        For the purposes of this task, we will keep the teaching approaches generic (“current” approach or “new” approach by the coach) but we want you to imagine what those approaches might be (i.e. starting with a group problem, a quick review worksheet, calendar time, or a math discussion).\n    </h1>\n    <MobileNavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i ===7}\n    <h1 class=\"descriptionText\">\n        To get feedback on how well the approach worked, your students will display a red light or green light to show their understanding.  \n    </h1>\n    <div class =\"imageBox\"></div>\n    <h1 class = \"imageText\">How much did you understand?</h1>\n    <img class=\"imageScale\" src=\"https://cdn.vox-cdn.com/thumbor/8XjPCHo_W0zCH1YDoR3ST3cN51E=/0x0:6720x4480/920x613/filters:focal(2823x1703:3897x2777)/cdn.vox-cdn.com/uploads/chorus_image/image/64906829/f9c5667541.0.jpeg\" alt=\"temp\">\n    <MobileNavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i ===8}\n    <h1 class=\"descriptionText\">\n        The response of a student holding up a red or green card after being asked might be like:\n    </h1>\n    <div class=\"imageBox\"></div>\n    <h1 class = \"imageText\">How much did you understand?</h1>\n        <div class=\"redGreenBall\" style=\"background-color:red;top:min(31vh,31vw)\">\n            <h1 style=\"top:50%;left50%;height:20%;width:20%;margin:0% 25%\">R</h1>\n        </div>\n        <div class=\"redGreenBall\" style=\"background-color:green; top:min(51vh,51vw)\"> \n            <h1 style=\"top:50%;left50%;height:20%;width:20%;margin:2% 20%\">G</h1>\n        </div>\n        <h1 class=\"understandBox\" style=\"top:min(30vh,30vw)\">\n            I do not get it! This did not help me.\n        </h1>\n        <h1 class=\"understandBox\" style=\"top:min(50vh,50vw)\">I understand!\n            I am happy with how this went.            \n        </h1>\n    <MobileNavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i ===9}\n    <SingleChoice passedText=\"You have a class of 20 students. Each student is represented by a circle. A teaching approach, or move, can have different outcomes day to day. On the first day you try it, you might get 12 students showing green and 8 showing red (shown below)\" exploitSelect={false} exploitMu={12}/>\n    <MobileNavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i ===10}\n    <SingleChoice passedText=\"And the second day you try the same move it might not work so well - 9 students showing green and 11 showing red.\" exploitSelect={false} exploitMu={9}/>\n    <MobileNavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i ===11}\n    <SingleChoice passedText=\"And on the next day you might try the same move and get slightly better results - 15 students showing green and 5 showing red. As you can see, the same move can get slightly better or worse results over time but stays fairly close to what it was the day before.\" exploitSelect={false} exploitMu={15}/>\n    <MobileNavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i === 12}\n    <h1 class=\"descriptionText\">When you play the task, the two teaching approaches will be represented like this.  \n        Your current approach shows the outcome from the last time you used that approach.\n        The outcome from your new approach is unknown until you try it.\n    </h1>\n    <MobileDoubleChoice exploitMu={11}/>\n    <MobileNavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i ===13}\n    <h1 class=\"descriptionText\">If you choose to continue with your current teaching approach, it will light up with a blue border and a new outcome will appear.  \n    </h1>\n    <MobileNavigationButtons breakTruth={breakTruth} nextInstruction={nextInstruction} previousInstruction={previousInstruction} replayAnimation={replayAnimation}/>\n    {#key animationCounter}\n        <MobileDoubleChoice breakNav={breakNav} delayExploit={true} exploitMu={11}/>\n    {/key}\n{/if}\n{#if i ===14}\n<h1 class=\"descriptionText\">Or if you choose to switch to the new approach, it will light up and show the results like this…\n</h1>\n<MobileNavigationButtons breakTruth={breakTruth} nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n<MobileDoubleChoice breakNav={breakNav} exploreSelect={true} viewExplore={true} exploitMu={11}/>\n{/if}\n{#if i === 15}\n    <h1 class=\"descriptionText\">If the new approach is worse than the current approach, you earn fewer points on the trial. Then, since it is worse, this new approach is discarded.\n    </h1>\n    <MobileNavigationButtons breakTruth={breakTruth} nextInstruction={nextInstruction} previousInstruction={previousInstruction} replayAnimation={replayAnimation}/>\n    {#key animationCounter}\n        <MobileDoubleChoice breakNav={breakNav} delayBadExplore={true} exploitMu={11} noReplaceExplore={true}/>\n    {/key}\n{/if}\n{#if i === 16}\n    <h1 class=\"descriptionText\">Then another new approach will appear. Now you can choose again from the current approach or another new approach.\n    </h1>\n    <MobileNavigationButtons breakTruth={breakTruth} nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n    <MobileDoubleChoice breakNav={breakNav} exploitMu={11}/>\n{/if}\n{#if i === 17}\n    <h1 class=\"descriptionText\">If you were to try the new approach and it is better than the current approach,  it will replace your current approach for your next choice. \n    </h1>\n    <MobileNavigationButtons breakTruth={breakTruth} nextInstruction={nextInstruction} previousInstruction={previousInstruction} replayAnimation={replayAnimation}/>\n    {#key animationCounter}\n        <MobileDoubleChoice breakNav={breakNav} delayGoodExplore={true} exploitMu={11} exploreMu={16} noReplaceExplore={true}/>\n    {/key}\n{/if}\n{#if i === 18}\n    <h1 class=\"descriptionText\">Once again, another new approach will appear... and so on...\n    </h1>\n    <MobileNavigationButtons breakTruth={breakTruth} nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n    <MobileDoubleChoice breakNav={breakNav} exploitMu={16}/>\n{/if}\n{#if i === 19}\n    <h1 class=\"descriptionText\">To recap, you need to choose between you current approach and a new approach.  Choosing you current approach gives you a similar result to what you got last time (slightly better or worse).  Choosing a new approach give you a totally new outcome(that can be a lot better or a lot worse).\n    </h1>\n    <MobileNavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i === 20}\n    <h1 class=\"descriptionText\">Before you begin, to make sure you've got everything, we will walk you through several trials...\n    </h1>\n    <MobileNavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i === 21}\n    <h1 class=\"descriptionText\">For our first trial we have a current teaching approach that seems to be working fairly well, so we may want to stick with our current approach (press the left choice)</h1>\n    <MobileDoubleChoice breakNav={breakNav} exploitMu={12} keyDisplay={true} nextButton = {\"left\"} nextInstruction={nextInstruction}/>\n{/if}\n{#if i=== 22}\n    <h1 class=\"descriptionText\">We can see that when we tried our current teaching approach it got better! So, we may want to keep trying that approach (press the left choice)</h1>\n    <MobileDoubleChoice breakNav={breakNav} keyDisplay={true} delayExploit={true} exploitMu={12} exploitMu2={13} delayTime={0} nextButton = {\"left\"} nextInstruction={nextInstruction}/>\n{/if}\n{#if i=== 23}\n    <h1 class=\"descriptionText\">Oh no! We seem to have gotten a bad outcome that time. Since our current choice is not performing well we may want to switch to a new approach (press the right choice)</h1>\n    <MobileDoubleChoice breakNav={breakNav} keyDisplay={true} delayExploit={true} exploitMu={13} exploitMu2={8} delayTime={0} nextButton = {\"right\"} nextInstruction={nextInstruction}/>\n{/if}\n{#if i=== 24}\n    <h1 class=\"descriptionText\">After trying the new approach, we got a worse outcome than our current approach. We may still think that there are better options out there though, and we decide to try another new approach (press the right choice)</h1>\n    <MobileDoubleChoice breakNav={breakNav} keyDisplay={true} delayBadExplore={true} exploitMu={8} exploreMu={1} delayTime={0} nextButton = {\"right\"} nextInstruction={nextInstruction}/>\n{/if}\n{#if i=== 25}\n    <h1 class=\"descriptionText\">Great! We seem to have found a much better approach when we tried another new approach. Now it is your turn to try a couple of trials by yourself. Choose either the left or right choice to make your decision.</h1>\n    <MobileDoubleChoice breakNav={breakNav} keyDisplay={true} delayGoodExplore={true} exploitMu={8} exploreMu={15} delayTime={0}/>\n{/if}\n{#if i === 26}\n<MobilePracticeGame breakTruth={breakTruth} toNext={nextInstruction} trialDescriptions={[\n    \"Great! We seem to have found a much better approach when we tried another new approach. Now it is your turn to try a couple of trials by yourself. Choose either the left or right arrow to make your decision.\",\n    \"Lets try another, 3 practice trials left\",\n    \"Lets try another, 2 practice trials left\",\n    \"Lets try another, 1 practice trials left\",\n    \"\"\n]}/> \n{/if}\n{#if i ===27}\n    <h1 class=\"descriptionText\"> The game will be organized into days and months, and the current day/month will be displayed at the top of your screen.\n         Every time you choose either your current teaching move or a new teaching move, it will increase your day count. At the end of 30 days, a new month\n        will happen. Here is the display you would see if you were currently on day 5 of the second month.</h1>\n    <h1 class =\"points\">Day {5} of {30}</h1>\n    <h1 class =\"points\" style=\"left:calc(50vw - min(50vw, 50vh));\">Month {2} of {6}</h1>\n    <MobileNavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction} backSkip={7}/>\n{/if}\n{#if i ===28}\n    <h1 class=\"descriptionText\">Your points will be kept track of with a progress bar at the top of your screen. The total bar length represents your total accumulated red and green lights this month. The flashing sections\n        represent the red and green lights that you recieved on your last choice. </h1>\n    <ProgressBar lastGreenBar={15} lastRedBar={5} greenBar = {250} redBar={210} numTrials={30}/>\n    <MobileNavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i === 29}\n    <h1 class=\"descriptionText\">So, all together, the top of your screen will look something like:</h1>\n    <h1 class =\"points\">Day {23} of {30}</h1>\n    <h1 class =\"points\" style=\"left:calc(50vw - min(50vw, 50vh));\">Month {2} of {6}</h1>\n    <ProgressBar lastGreenBar={15} lastRedBar={5} greenBar = {250} redBar={210} numTrials={30}/>\n    <MobileNavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i ===30}\n<h1 class=\"descriptionText\">At the end of each month, you will be shown a screen giving your performance that month and the month before. This gives you a chance to \n    improve upon your score between months! If you improved upon your previous, you would see something like:\n</h1>\n    <MonthProgress greenScore={380} greenScoreLast={300} numTrials={30}/>\n    <MobileNavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i === 31}\n    <h1 class=\"descriptionText\">Now that you've seen all the parts of the game, lets have you do a couple of rounds by yourself. The classroom understanding bar will be added into these trials.\n    </h1>\n    <MobileNavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction}/>\n{/if}\n{#if i === 32}\n    <MobileGame toNext={sendGameUpstream} gameString={\"\"} writeKey={writeKey} id={id} totalBlocks={0} block={0} numTrials={10}/>\n{/if}\n{#if i === 33}\n    <h1 class=\"descriptionText\">At this point you should have a firm understanding of the task. This task will go for 6 months of 30 days each. Remember to maximize your students' understanding, and good luck! To review any of the instructions click back, to continue to the task click next.\n    </h1>\n    <MobileNavigationButtons nextInstruction={nextInstruction} previousInstruction={previousInstruction} backSkip={2}/>\n{/if}\n{#if i === 34}\n    {toGame()}\n{/if}","<script>\n    export let writeKeyPass\n    let preflightInitiated = false\n    let preflightFileFail ={}\n    let preflightError = false\n    let queryNotFound=false\n    async function createWriteKey(templateKey,password,metaData){\n        try{\n        let res =await fetch(\"https://exius.nrdlab.org/WriteKey/createWriteKey\",{\n        headers:{\n        'Content-Type': 'application/json',\n        authorization:`templateKey:${templateKey};password:${password}`},\n        method:\"POST\",\n        body:JSON.stringify({metaData:metaData})})\n        return await res.json()}\n        catch(e){\n            throw e\n        }\n    }        \nasync function Send_Data_To_Exius(params,templateKey,writeKey){\n    // [{endpoint:Horizon_CSV,data:data,fname:fname}]\n    try{\n        var fd=new FormData()\n        for ( const fileInfo of params){\n            //console.log(fileInfo)\n            let URL = new Blob([fileInfo.data], { type: 'text/csv;charset=utf-8;' });\n            fd.append(fileInfo.endpoint,URL,fileInfo.fname)\n        }\n        let res = await fetch(\"https://exius.nrdlab.org/Upload\",{\n            headers:{authorization:`templateKey:${templateKey};writeKey:${writeKey}`},\n            method:\"POST\",\n            body: fd})\n        return await res.json()}\n    catch(e){\n        throw e\n    }}\n\n    async function submitPreflight(id,password){\n        try{\n            preflightInitiated=true\n            let writeKey=await createWriteKey(\"Teacher_Task\",password,\"test_data\")\n            let dataPreflight=await Send_Data_To_Exius([{endpoint:\"TeacherCSV\",fname:`Subject_${id}.csv`,data:\"\"},{endpoint:\"TeacherResponse\",fname:`Response_${id}.txt`,data:\"\"}],\"Teacher_Task\",writeKey.writeKey)\n            //console.log(writeKey.writeKey)\n            console.log(dataPreflight)\n            if (Object.keys(dataPreflight.failedFiles).length==0){\n                writeKeyPass(writeKey.writeKey,id)\n            }\n            else{\n                preflightFileFail=dataPreflight\n            }\n        }\n        catch(e){\n            console.log(e)\n            preflightError = true\n        }\n    }\n    function getQuery(){\n        return Object.fromEntries([...new URLSearchParams(window.location.search)])\n    }\n    let queryData=getQuery()\n    //modified\n    //submitPreflight((queryData.id)?queryData.id:1234,queryData.pwd)\n    writeKeyPass(\"1\",\"1\")\n</script>\n{#if preflightInitiated}\n    <h1>Checking Credentials...</h1>\n{/if}\n{#if preflightError}\n    <h1>Error in preflight</h1>\n{/if}\n{#if Object.keys(preflightFileFail).length !== 0}\n    <h1>preflightFileFail</h1>\n{/if}","<script>\n    export let greenScore = 10\n    export let numTrials= 30\n    export let firstBlock = false\n    export let lastBlock = false\n    export let greenScoreLast=10\n    export let nextYear\n    const redScore = numTrials*20 - greenScore\n    const redScoreLast = numTrials*20 - greenScoreLast\n    let transitionOffBlank=false\n    async function timer(time){\n        return await new Promise(r=>setTimeout(r,time))\n    }\n    async function blankToOn(){\n        await timer(500)\n        transitionOffBlank=true\n    }\n    blankToOn()\n</script>\n<style>\n.progressGreen {\n    top:min(.5vh,.5vw);\n    height:min(4vh,4vw);\n    background-color: green;\n}\n.progressRed {\n    transform:translate(-100%);\n    top:min(.5vh,.5vw);\n    height:min(4vh,4vw);\n    background-color: red;\n}\n.classUnderstanding {\n    position: absolute; \n    top:min(5vh,5vw); \n    left:calc(50vw - min(25vw, 25vh)); \n    width:min(50vw, 50vh); \n    height:min(5vw, 5vh); \n    text-align:center; \n    font-size: min(2vw, 2vh);\n}\n.progressBar {\n    width:min(61vh,61vw);\n    height:min(5vh,5vw);\n    background-color:white;\n    position:absolute;\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    border: solid min(.4vh,.4vw) black\n}\n.description {\n    position: absolute; \n    top:min(30vh,30vw); \n    left:calc(50vw - 48vw); \n    width:min(96vw); \n    height:min(30vw, 30vh); \n    text-align:center; \n    font-size: min(2vw , 2vh);\n    }\n.performanceBox {\n    position:absolute;\n    top:min(50vh,50vw); \n    left:calc(50vw - 48vw); \n    width:min(96vw); \n    font-size: min(2vw , 2vh);\n    text-align:center; \n}\n.fancyButton {\n    position:absolute;\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    border: solid min(.4vh,.4vw) black;\n    width: min(40vh,40vw);\n    top:min(80vh,80vw);\n    left: calc(50vw - min(20vh,20vw));\n    text-align: center;\n    font-size: min(1.5vh,1.5vw);\n}\n.fancyButton:hover{\n    box-shadow: 0 0 min(2vh,2vw) blue;\n    cursor: pointer;\n}\n</style>\n{#if transitionOffBlank}\n    <h1 class=\"classUnderstanding\">Total Student Understanding This Month</h1>\n    <div style = \"left:calc(50vw - min(30vh,30vw)); top:min(10vh,10vw); position:absolute\">\n        <div class=\"progressBar\" style=\"left:max(-.5vw,-.5vh)\"></div>\n        <div class = progressGreen style=\"width:calc((min(60vh,60vw) / {numTrials*20}) * {greenScore}); position:absolute\"></div>\n        <div class = progressRed style=\"width:calc((min(60vh,60vw) / {numTrials*20}) * {redScore}); left:min(60vh,60vw); position:absolute\"></div>\n    </div>\n    {#if !firstBlock}\n        <h1 class=\"classUnderstanding\" style=\"top:min(15vh,15vw)\">Total Student Understanding Last Month</h1>\n        <div style = \"left:calc(50vw - min(30vh,30vw)); top:min(20vh,20vw); position:absolute\">\n            <div class=\"progressBar\" style=\"left:max(-.5vw,-.5vh)\"></div>\n            <div class = progressGreen style=\"width:calc((min(60vh,60vw) / {numTrials*20}) * {greenScoreLast}); position:absolute\"></div>\n            <div class = progressRed style=\"width:calc((min(60vh,60vw) / {numTrials*20}) * {redScoreLast}); left:min(60vh,60vw); position:absolute\"></div>\n        </div>\n    {/if}\n    {#if firstBlock}\n        <div class=\"description\">\n            <h1> Your classroom's understanding at the end of this semester was {Math.round(100*greenScore/(numTrials*20))}%</h1>\n        </div>\n        <div class =\"clearfix performanceBox\">\n            <h1 >Good job on your first month! Let's try and do even better next month!</h1>\n        </div>\n    {:else if lastBlock}\n        <div class=\"description\">\n            <h1> Your classroom's understanding at the end of this month was {Math.round(100*greenScore/(numTrials*20))}%, and\n            your classroom's understanding last month was {Math.round(100*greenScoreLast/(numTrials*20))}%\n            </h1>\n        </div> \n        <div >\n            <div class =\"clearfix performanceBox\">\n            {#if greenScore>greenScoreLast}\n                <h1>Great Job! You improved upon your classroom's understanding from the last month! Click the button below to finish the experiment!</h1>\n            {/if}\n            {#if greenScore<greenScoreLast}\n                <h1>Oh no! It looks like your classroom's understanding dropped from the last month! Click the button below to finish the experiment!</h1>\n            {/if}\n            {#if greenScore == greenScoreLast}\n                    <h1 >Looks like you tied your last score! Click the button below to finish the experiment!</h1>\n            {/if}\n        </div>\n        </div>\n    {:else}\n        <div class=\"description\">\n            <h1> Your classroom's understanding at the end of this month was {Math.round(100*greenScore/(numTrials*20))}%, and\n            your classroom's understanding last month was {Math.round(100*greenScoreLast/(numTrials*20))}%\n            </h1>\n        </div> \n        <div >\n            <div class =\"clearfix performanceBox\">\n            {#if greenScore>greenScoreLast}\n                <h1>Great Job! You improved upon your classroom's understanding from the last month! Let's try and do even better in the next month!</h1>\n            {/if}\n            {#if greenScore<greenScoreLast}\n                <h1>Oh no! It looks like your classroom's understanding dropped from the last month, let's try and beat this score next time!</h1>\n            {/if}\n            {#if greenScore == greenScoreLast}\n                    <h1 >Looks like you tied your last score! Let's try and beat that score in the next month!</h1>\n            {/if}\n        </div>\n        </div>\n    {/if}\n    <button class=\"fancyButton\" on:click={nextYear()}>\n        <h1>Start Next Month</h1>\n    </button>\n{/if}\n","<script>\n    import Game from \"./Game.svelte\"\n    import MobileGame from \"./MobileGame.svelte\"\n    import Instructions from \"./Instructions/Instructions.svelte\"\n    import MobileInstructions from \"./Instructions/MobileInstructions.svelte\";\n    import Redirect from './Redirect.svelte'\n    import Password from \"./Password.svelte\"\n    import BlockEnd from \"./BlockEnd.svelte\"\n    let instructionsDone=false\n    let gameEnd=false\n    let passedKey=false\n    let writeKey=undefined\n    let id = undefined\n    let gameData=\"\"\n    let years = 6\n    let yearEnd=false\n    let greenArray = []\n    let yearCounter = 1\n    let mobile = true\n    function toGame(){\n        instructionsDone = true\n    }\n    function toNext(data,greens){\n        if (yearCounter < years){\n            yearEnd=true\n            gameData=data\n            greenArray.push(greens)\n            yearCounter+=1\n        }\n       else{\n           gameEnd=true\n       }\n    }\n    function getData(data){\n        gameData=data\n        console.log(data)\n    }\n    function getWriteKey(writeKey_d,id_d){\n        passedKey=true\n        id =id_d\n        writeKey = writeKey_d\n    }\n    function nextYear(){\n        yearEnd=false\n    }\n</script>\n{#if !passedKey}\n    <Password writeKeyPass={getWriteKey}/>\n{/if}\n{#if passedKey && instructionsDone===false}\n    {#if mobile}\n        <MobileInstructions toGame={toGame} getData={getData} writeKey={writeKey} id={id}/>\n    {:else}\n        <Instructions toGame={toGame} getData={getData} writeKey={writeKey} id={id}/>\n    {/if}\n{/if}\n{#if (instructionsDone && !gameEnd)}\n    {#if yearEnd}\n        <BlockEnd greenScore={greenArray[greenArray.length-1]} greenScoreLast={(greenArray.length>1)?greenArray[greenArray.length-2]:null} firstBlock={(greenArray.length>1)?false:true} nextYear={nextYear} lastBlock={greenArray.length === years}/>\n    {:else}\n        {#if mobile}\n            <MobileGame toNext={toNext} gameString={gameData} writeKey={writeKey} id={id} totalBlocks={years} block={yearCounter}/>\n        {:else}\n            <Game toNext={toNext} gameString={gameData} writeKey={writeKey} id={id} totalBlocks={years} block={yearCounter}/>\n        {/if}\n    {/if}\n    <!-- <Game toDebrief={toDebrief} gameString={gameData} writeKey={writeKey} id={id} totalBlocks={6} block={1}/>\n    -->\n{/if}\n{#if gameEnd}\n    <Redirect/>\n{/if}\n\n","import App from './Control.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t}\n});\n\nexport default app;"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","callback","promise","Promise","fulfill","add","[object Object]","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","str","hash","charCodeAt","doc","ownerDocument","stylesheet","__svelte_stylesheet","head","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","flush","update","$$","pop","has","fragment","before_update","dirty","ctx","after_update","wait","then","dispatch","direction","kind","dispatchEvent","type","detail","e","createEvent","initCustomEvent","custom_event","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_in_transition","params","animation_name","config","running","cleanup","go","easing","tick","css","start_time","end_time","abort","started","create_out_transition","group","reset","create_component","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","destroy_component","make_dirty","fill","init","instance","create_fragment","not_equal","props","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","this","$destroy","index","splice","$$props","obj","$$set","keys","Math","floor","stackSize","numberGreen","clearBoard","numberRed","rangeGreen","rangeRed","replaceExploit","timer","time","setTimeout","sample_normal","mu","sd","u","v","random","sqrt","log","cos","PI","box_mueller","random_int","counter","gameString","numTrials","trial","range","trialStartTime","viewExplore","exploitMu","exploreMu","exploreSelect","exploitSelect","truth","keyView","lastGreenBar","lastRedBar","greenBar","redBar","trialHandle","toNext","writeKey","id","bothInvisible","totalBlocks","console","singleTrialData","toString","previousExploit","keyPressTime","newDist","newNorm","min","max","sample_normal_to_twenty","undefined","iterate_keys","trialString","substring","export_data","handleButton","side","breakTruth","nextInstruction","previousInstruction","replayAnimation","backSkip","forwardSkip","display","passedText","round","breakNav","delayGoodExplore","delayBadExplore","delayExploit","exploitMu2","keyDisplay","noReplaceExplore","pointCounter","points","delayTime","delayedGoodExplore","delayedBadExplore","delayedExploit","elem","documentElement","requestMethod","requestFullScreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullScreen","call","trialDescriptions","nextArrow","greenScore","greenScoreLast","redScore","redScoreLast","blankToOn","toGame","getData","animationCounter","warmUp","iterate_i","n","nextButton","pressed","writeKeyPass","fromEntries","URLSearchParams","location","search","firstBlock","lastBlock","nextYear","transitionOffBlank","years","instructionsDone","gameEnd","passedKey","gameData","yearEnd","greenArray","yearCounter","greens","writeKey_d","id_d","body"],"mappings":"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"}